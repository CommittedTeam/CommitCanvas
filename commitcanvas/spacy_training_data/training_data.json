[["Update metafiles", {"tags": ["NN", "NNS"]}], ["config: Handle rich (non-string) types in TOML file\n\nFixes #3538\n\nBefore that, we had to use strings in a TOML configuration file, like\nthis:\n\n    enable = \"use-symbolic-message-instead,useless-suppression\"\n    jobs = \"10\"\n    suggestion-mode = \"no\"\n\nTOML supports rich types like list, integer and boolean. They make for\na more readable and less error-prone file. We can now express the same\nconfiguration like this:\n\n    enable = [\n        \"use-symbolic-message-instead\",\n        \"useless-suppression\",\n    ]\n    jobs = 10\n    suggestion-mode = false", {"tags": ["NN", ":", "VB", "JJ", "-LRB-", "JJ", "JJ", "JJ", "-RRB-", "NNS", "IN", "NNP", "NN", "_SP", "NNS", "$", "CD", "_SP", "IN", "DT", ",", "PRP", "VBD", "TO", "VB", "NNS", "IN", "DT", "NNP", "NN", "NN", ",", "UH", "_SP", "DT", ":", "_SP", "VB", "SYM", "``", "VB", "HYPH", "JJ", "HYPH", "NN", "HYPH", "RB", ",", "JJ", "HYPH", "NN", "''", "_SP", "NNS", "SYM", "``", "CD", "''", "_SP", "NN", "HYPH", "NN", "SYM", "``", "UH", "''", "_SP", "NNP", "VBZ", "JJ", "NNS", "IN", "NN", ",", "NN", "CC", "JJ", ".", "PRP", "VBP", "IN", "_SP", "DT", "RBR", "JJ", "CC", "JJR", "NN", "HYPH", "JJ", "NN", ".", "PRP", "MD", "RB", "VB", "DT", "JJ", "_SP", "NN", "IN", "DT", ":", "_SP", "VB", "SYM", "-LRB-", "_SP", "``", "VB", "HYPH", "JJ", "HYPH", "NN", "HYPH", "RB", "''", ",", "_SP", "``", "JJ", "HYPH", "NN", "''", ",", "_SP", "-RRB-", "_SP", "NNS", "SYM", "CD", "_SP", "NN", "HYPH", "NNP", "NFP", "JJ"]}], ["Revert pylint.Run's `exit` parameter to ``do_exit``\n\nThis has been inadvertently changed several releases ago to ``do_exit``.\n\nClose #3533", {"tags": ["NN", "NN", ".", "NNP", "POS", "''", "NN", "''", "NN", "IN", "''", "''", "NN", "''", "''", "_SP", "DT", "VBZ", "VBN", "RB", "VBN", "JJ", "NNS", "RB", "IN", "''", "''", "NN", "''", "''", ".", "_SP", "VB", "$", "CD"]}], ["master is now 2.6.0", {"tags": ["NN", "VBZ", "RB", "VBG"]}], ["Pylint 2.5.0 requires astroid 2.4+ to work correctly", {"tags": ["NN", "CD", "VBZ", "NNP", "CD", "CC", "TO", "VB", "RB"]}], ["Refactor - Move the content of lint.py in its own package\n\nAlso move unittest_lint in test/lint.", {"tags": ["NN", ",", "VB", "DT", "NN", "IN", "NNS", "IN", "PRP$", "JJ", "NN", "_SP", "RB", "VB", "PRP", "IN", "NN", "SYM", "NN", "."]}], ["Positional-only argument annotations are taken in account for ``unused-import``\n\nThis has been handled on astroid's side with https://github.com/PyCQA/astroid/commit/2e1ba8eb47694439215b866564c4699039b86ec9\n\nClose #3462", {"tags": ["NN", "HYPH", "JJ", "NN", "NNS", "VBP", "VBN", "IN", "NN", "IN", "''", "''", "JJ", "HYPH", "NN", "''", "''", "_SP", "DT", "VBZ", "VBN", "VBN", "IN", "NNP", "POS", "NN", "IN", "NN", "_SP", "VB", "$", "CD"]}], ["Positional-only arguments are taken in account for ``useless-super-delegation``", {"tags": ["NN", "HYPH", "RB", "NNS", "VBP", "VBN", "IN", "NN", "IN", "''", "''", "JJ", "HYPH", "NN", "JJ", "NN", "''", "''"]}], ["Emit ``invalid-name`` for variables defined in loops at module level.\n\nClose #2695", {"tags": ["NN", "''", "''", "JJ", "HYPH", "NN", "''", "''", "IN", "NNS", "VBN", "IN", "NNS", "IN", "JJ", "NN", ".", "_SP", "RB", "$", "CD"]}], ["Skip methods without arguments when generating the dot format. Close #3351 (#3427)", {"tags": ["NN", "NNS", "IN", "NNS", "WRB", "VBG", "DT", "NN", "NN", ".", "JJ", "$", "CD", "-LRB-", "$", "CD", "-RRB-"]}], ["Add notes-rgx option for fixme checker (#3394)\n\nThis commit adds a new `notes-rgx` which is used by the \"fixme\" check for more\r\ngranular control over the what fixme messages to emit.\r\n\r\nCo-authored-by: Claudiu Popa <pcmanticore@gmail.com>", {"tags": ["NN", "NNS", "HYPH", "NN", "NN", "IN", "NNP", "NN", "-LRB-", "$", "CD", "-RRB-", "_SP", "DT", "NN", "VBZ", "DT", "JJ", "''", "NNS", "HYPH", "NN", "''", "WDT", "VBZ", "VBN", "IN", "DT", "``", "NN", "''", "NN", "IN", "JJR", "_SP", "JJ", "NN", "IN", "DT", "WP", "NN", "NNS", "TO", "VB", ".", "_SP", "JJ", "VBG", "VBN", "HYPH", "RB", ":", "NNP", "NNS", "XX", "ADD", "XX"]}], ["Emit ``unused-argument`` for functions that partially uses their argument list before raising an exception. (#3385)\n\nClose #3246", {"tags": ["NN", "''", "''", "JJ", "HYPH", "NN", "''", "''", "IN", "NNS", "WDT", "RB", "VBZ", "PRP$", "NN", "NN", "IN", "VBG", "DT", "NN", ".", "-LRB-", "$", "CD", "-RRB-", "_SP", "VB", "$", "CD"]}], ["BasicChecker: fix typo in 'visit_with' method (#3345)", {"tags": ["NN", ":", "VB", "NN", "IN", "``", "NNP", "''", "NN", "-LRB-", "$", "CD", "-RRB-"]}], ["Pin coverage to <5 to account for the private coverage format changing", {"tags": ["NN", "NN", "IN", "XX", "CD", "TO", "VB", "IN", "DT", "JJ", "NN", "NN", "VBG"]}], ["CLeanup tmpdir related code in test\n\npy.path.as_cwd is a nice ctx manager that can be used in one test\ninstead of a try/finally block.", {"tags": ["NN", "NNS", "VBN", "NN", "IN", "NN", "_SP", "NNP", "VBZ", "DT", "JJ", "NN", "NN", "WDT", "MD", "VB", "VBN", "IN", "CD", "NN", "_SP", "RB", "IN", "DT", "NN", "SYM", "RB", "VB", "."]}], ["import-outside-toplevel: Show full names for ImportFrom nodes (#3207)\n\nThis is a little more informative than just showing the module name.", {"tags": ["NN", "HYPH", "IN", "HYPH", "NN", ":", "VB", "JJ", "NNS", "IN", "NNP", "NNS", "-LRB-", "$", "CD", "-RRB-", "_SP", "DT", "VBZ", "DT", "RB", "RBR", "JJ", "IN", "RB", "VBG", "DT", "JJ", "NN", "."]}], ["Refactor file checking for a simpler parallel API (#3016)\n\nThis change prepares the code for enabling Prospector to take advantage\r\nof running PyLint parallel.\r\n\r\nIterating files is moved into generator (_iterate_file_descrs) so that\r\nparallel checking can use the same implementation (_check_file) just\r\nby providing different kind of generator that reads the files from parent\r\nprocess.\r\n\r\nThe refactoring removes code duplication that existed in PyLinter._do_check\r\nmethod; checking module content from stdin had identical implementation to\r\nchecking content from a source file.\r\n\r\nMade PyLinter.expand_files a private method.\r\n\r\nThe previous implementation of parallel linting created new PyLinter\r\nobjects in the worker (child) process causing failure when running under\r\nProspector because Prospector uses a custom PyLinter class\r\n(a class inherited from PyLinter)\r\nand PyLint naturally just creates PyLinter object. This caused linting to\r\nfail because there is options for Prospector's IndentChecker which was not\r\ncreated in the worker process.\r\n\r\nThe new implementation passes the original PyLinter object into workers\r\nwhen the workers are created. See https://docs.python.org/3/library/multiprocessing.html#contexts-and-start-methods\r\n\r\nNote that as Windows uses spawn method by default, PyLinter object (and\r\nits) members need to be pickleable from now on with the exception being\r\nPyLinter.reporter which is not passed to child processes.\r\n\r\nThe performance has remained about the same based on quick tests done with\r\nDjango project containing about 30 000 lines of code; with the old\r\nimplementation linting took 26-28 seconds with 8 jobs on quad core i7 and\r\n24-27 seconds with the new implementation.", {"tags": ["NN", "NN", "VBG", "IN", "DT", "JJR", "NN", "NN", "-LRB-", "$", "CD", "-RRB-", "_SP", "DT", "NN", "VBZ", "DT", "NN", "IN", "VBG", "NNP", "TO", "VB", "NN", "_SP", "IN", "VBG", "NN", "NN", ".", "_SP", "VBG", "NNS", "VBZ", "VBN", "IN", "NN", "-LRB-", "NN", "NNP", "-RRB-", "IN", "IN", "_SP", "JJ", "NN", "MD", "VB", "DT", "JJ", "NN", "-LRB-", "NNP", "NNP", "-RRB-", "RB", "_SP", "IN", "VBG", "JJ", "NN", "IN", "NN", "WDT", "VBZ", "DT", "NNS", "IN", "NN", "_SP", "NN", ".", "_SP", "DT", "VBG", "VBZ", "NN", "NN", "WDT", "VBD", "IN", "NNP", "_SP", "NN", ",", "VBG", "NN", "NN", "IN", "NNP", "VBD", "JJ", "NN", "IN", "_SP", "VBG", "NN", "IN", "DT", "NN", "NN", ".", "_SP", "VBD", "NNP", "DT", "JJ", "NN", ".", "_SP", "DT", "JJ", "NN", "IN", "NN", "VBG", "VBN", "JJ", "NNP", "_SP", "VBZ", "IN", "DT", "NN", "-LRB-", "NN", "-RRB-", "NN", "VBG", "NN", "WRB", "VBG", "IN", "_SP", "NNP", "IN", "NNP", "VBZ", "DT", "NN", "NNP", "NN", "_SP", "-LRB-", "DT", "NN", "VBN", "IN", "NNP", "-RRB-", "_SP", "CC", "NNP", "RB", "RB", "VBZ", "NNP", "NN", ".", "DT", "VBD", "VBG", "IN", "_SP", "VB", "IN", "EX", "VBZ", "NNS", "IN", "NNP", "POS", "NNP", "WDT", "VBD", "RB", "_SP", "VBN", "IN", "DT", "NN", "NN", ".", "_SP", "DT", "JJ", "NN", "VBZ", "DT", "JJ", "NNP", "NN", "IN", "NNS", "_SP", "WRB", "DT", "NNS", "VBP", "VBN", ".", "VB", "NN", "_SP", "VB", "IN", "IN", "NNP", "VBZ", "NN", "NN", "IN", "NN", ",", "NNP", "NN", "-LRB-", "CC", "_SP", "PRP$", "-RRB-", "NNS", "VBP", "TO", "VB", "JJ", "IN", "RB", "RB", "IN", "DT", "NN", "VBG", "_SP", ",", "WDT", "VBZ", "RB", "VBN", "IN", "NN", "NNS", ".", "_SP", "DT", "NN", "VBZ", "VBN", "IN", "DT", "JJ", "VBN", "IN", "JJ", "NNS", "VBN", "IN", "_SP", "NNP", "NN", "VBG", "RB", "CD", "CD", "NNS", "IN", "NN", ":", "IN", "DT", "JJ", "_SP", "NN", "VBG", "VBD", "CD", "SYM", "CD", "NNS", "IN", "CD", "NNS", "IN", "JJ", "NN", "NN", "CC", "_SP", "CD", "SYM", "CD", "NNS", "IN", "DT", "JJ", "NN", "."]}], ["docparams can identify multiple types in raises sections\n\nCloses #2729", {"tags": ["NN", "MD", "VB", "JJ", "NNS", "IN", "VBZ", "NNS", "_SP", "VBZ", "$", "CD"]}], ["Rename attributes to prepare for the astroid dataclass transform", {"tags": ["NN", "VBZ", "TO", "VB", "IN", "DT", "JJ", "NN", "NN"]}], ["W0199: Change description to use the term 2-item-tuple (#3033)", {"tags": ["NN", ":", "VB", "NN", "TO", "VB", "DT", "NN", "CD", "HYPH", "NN", "-LRB-", "$", "CD", "-RRB-"]}], ["Refactor - Rename an overlapsing function in MessageHandlerMixIn\n\nBaseChecker and MessageHandlerMixIn can be the same instance.", {"tags": ["NN", "HYPH", "NNP", "DT", "VBG", "NN", "IN", "NNP", "_SP", "NNP", "CC", "NNP", "MD", "VB", "DT", "JJ", "NN", "."]}], ["Refactor - Remove unused argument 'name'", {"tags": ["NN", "HYPH", "VB", "JJ", "NN", "''", "NN", "''"]}], ["Refactor - Giving multiple parameters instead of a dict\n\nThis make the understanding of the function easier.", {"tags": ["NN", "HYPH", "VBG", "JJ", "NNS", "RB", "IN", "DT", "NN", "_SP", "DT", "VB", "DT", "NN", "IN", "DT", "NN", "JJR", "."]}], ["Refactor - Use self directly in checker get_full_documentation", {"tags": ["NN", "HYPH", "NNP", "NN", "RB", "IN", "NN", "NN"]}], ["Refactor - Clearer function name ('rest' -> 'rst') in utils\n\nI used the old name but there was probably a typo in it, as the format is\ncalled rst.", {"tags": ["NN", "HYPH", "JJR", "NN", "NN", "-LRB-", "``", "NN", "''", ":", "XX", "``", "NN", "''", "-RRB-", "IN", "NNS", "_SP", "PRP", "VBD", "DT", "JJ", "NN", "CC", "EX", "VBD", "RB", "DT", "NN", "IN", "PRP", ",", "IN", "DT", "NN", "VBZ", "_SP", "VBN", "NNP", "."]}], ["Refactor - Remove useless parameter in print_checker_doc", {"tags": ["NN", "HYPH", "VB", "JJ", "NN", "IN", "NNP"]}], ["Refactor - Move doc for checkers in BaseChecker\n\nAt long last.", {"tags": ["NN", "HYPH", "VB", "NN", "IN", "NNS", "IN", "NNP", "_SP", "IN", "RB", "RB", "."]}], ["Refactor - Use get_rest_title where it could be", {"tags": ["NN", "HYPH", "NNP", "NN", "WRB", "PRP", "MD", "VB"]}], ["Refactor - Move utility function to utils\n\nWe want to use them in Checker too.", {"tags": ["NN", "HYPH", "NN", "NN", "NN", "IN", "NNS", "_SP", "PRP", "VBP", "TO", "VB", "PRP", "IN", "NNP", "RB", "."]}], ["Refactor - Remove _ in  _rest_format_section\n\nBecause we want to make it a public function.", {"tags": ["NN", "HYPH", "NNP", "NNP", "IN", "_SP", "NN", "NN", "_SP", "IN", "PRP", "VBP", "TO", "VB", "PRP", "DT", "JJ", "NN", "."]}], ["Refactor - Remove syntax specific to python 3.6\n\nFollowing review see here : https://github.com/PyCQA/pylint/pull/2844#discussion_r281014957", {"tags": ["NN", "HYPH", "NN", "NN", "JJ", "TO", "VB", "CD", "_SP", "VBG", "NN", "VB", "RB", ":", "NNP"]}], ["Refactor - Simplify the Checker.__repr__ function\n\nFollowing review see : https://github.com/PyCQA/pylint/pull/2844#discussion_r281015055", {"tags": ["NN", ",", "VB", "DT", "NNP", "NNP", "NNP", "NN", "_SP", "VBG", "NN", "VB", ":", "NN"]}], ["Refactor - Use a constant for the main checker name\n\nFollowing review see : https://github.com/PyCQA/pylint/pull/2844#discussion_r281014968", {"tags": ["NN", "HYPH", "VB", "DT", "NN", "IN", "DT", "JJ", "NN", "NN", "_SP", "VBG", "NN", "NN", ":", "NNP"]}], ["Refactor - Move build_message_definition to the BaseChecker class", {"tags": ["NN", "HYPH", "VB", "NN", "IN", "DT", "NNP", "NN"]}], ["Refactor - Separate string creation and display in _print_full_documentation\n\nThis will permit to get the string without printing it at the same time.", {"tags": ["NN", "HYPH", "JJ", "NN", "NN", "CC", "NN", "IN", "NNP", "NN", "_SP", "DT", "MD", "VB", "TO", "VB", "DT", "NN", "IN", "VBG", "PRP", "IN", "DT", "JJ", "NN", "."]}], ["Refactor - Separate string creation and display in _print_checker_doc\n\nThis will permit to get the string without printing it at the same time.\nThis will also permit to move this to BaseChecker.", {"tags": ["NN", "HYPH", "JJ", "NN", "NN", "CC", "NN", "IN", "NNP", "NNP", "_SP", "DT", "MD", "VB", "TO", "VB", "DT", "NN", "IN", "VBG", "PRP", "IN", "DT", "JJ", "NN", ".", "_SP", "DT", "MD", "RB", "VB", "TO", "VB", "DT", "IN", "NNP", "."]}], ["Refactor - Separate string creation and display in rest_format_section\n\nThis will permit to get the string without printing it at the same time.\nPrint add an implicit \\n so if this look convuluted remember that. We had\nto change step by step in order to be able to not have too much\ncomplexity at once.", {"tags": ["NN", "HYPH", "JJ", "NN", "NN", "CC", "NN", "IN", "NN", "_SP", "DT", "MD", "VB", "TO", "VB", "DT", "NN", "IN", "VBG", "PRP", "IN", "DT", "JJ", "NN", ".", "_SP", "NNP", "VB", "DT", "NN", "_SP", "RB", "IN", "DT", "NN", "VBN", "VB", "DT", ".", "PRP", "VBD", "_SP", "TO", "VB", "NN", "IN", "NN", "IN", "NN", "TO", "VB", "JJ", "TO", "RB", "VB", "RB", "JJ", "_SP", "NN", "IN", "RB", "."]}], ["Refactor - Give a checker instead of a string to _print_checker_doc\n\nWill permit to move functions in the BaseChecker class later.", {"tags": ["NN", ",", "VB", "DT", "NN", "RB", "IN", "DT", "NN", "IN", "NNP", "NNP", "_SP", "MD", "VB", "TO", "VB", "NNS", "IN", "DT", "NNP", "NN", "RB", "."]}], ["Refactor - Put a checker instance in informations", {"tags": ["NN", "HYPH", "VB", "DT", "NN", "NN", "IN", "NNS"]}], ["Feat - Permit to get message definition by msgid in Checkers", {"tags": ["NN", "HYPH", "NN", "TO", "VB", "NN", "NN", "IN", "NN", "IN", "NNP"]}], ["Style - Less verbose print with triple quote strings", {"tags": ["NN", "HYPH", "JJR", "NN", "NN", "IN", "JJ", "NN", "NNS"]}], ["Test - Handle the case where the msgid does not exist", {"tags": ["NN", "HYPH", "VB", "DT", "NN", "WRB", "DT", "NN", "VBZ", "RB", "VB"]}], ["Test - Add unittest for MessageStore format help", {"tags": ["NN", "HYPH", "NN", "NN", "IN", "NNP", "NN", "NN"]}], ["Syntax errors report the column number.\n\nClose #2914", {"tags": ["NN", "NNS", "VBP", "DT", "NN", "NN", ".", "_SP", "VB", "$", "CD"]}], ["Refactor - Remove unused and untested code in utils\n\nThere might be code that is used only in test but it's harder\nto detect.", {"tags": ["NN", "HYPH", "VB", "JJ", "CC", "JJ", "NN", "IN", "NNS", "_SP", "EX", "MD", "VB", "NN", "WDT", "VBZ", "VBN", "RB", "IN", "NN", "CC", "PRP", "VBZ", "JJR", "_SP", "TO", "VB", "."]}], ["Style - Use a single list comprehension instead of a for loop\n\nCo-Authored-By: Pierre-Sassoulas <pierre.sassoulas@gmail.com>", {"tags": ["NN", "HYPH", "VB", "DT", "JJ", "NN", "NN", "RB", "IN", "DT", "IN", "NN", "_SP", "NN", "VBG", "VBN", "HYPH", "NN", ":", "NNP", "HYPH", "NNP", "XX", "ADD", "XX"]}], ["Refactor - Create file for BaseChecker\n\nIt was 'hidden' in checkers.__init__.py", {"tags": ["NN", "HYPH", "VB", "NN", "IN", "NNP", "_SP", "PRP", "VBD", "``", "VBN", "''", "IN", "ADD"]}], ["Refactor - Move function for checker in Checker\n\nMsgStore.get_messages_from_checker => Checker.messages\nMsgStore.check_checker_consistency => Checker.check_consistency\nProbably makes more sense this way.", {"tags": ["NN", "HYPH", "VB", "NN", "IN", "NN", "IN", "NNP", "_SP", "NN", "NFP", "XX", "NNS", "_SP", "NN", "NFP", "XX", "XX", "_SP", "RB", "VBZ", "JJR", "NN", "DT", "NN", "."]}], ["Refactor - Create a new file for ASTWalker unittest", {"tags": ["NN", "HYPH", "VB", "DT", "JJ", "NN", "IN", "NN", "JJ"]}], ["Refactor - Move refactor.utils function to the utils package\n\nThis permit to have less cross dependency as the utils package\ndoes not depend on anything. The checker package still depends\non reporter. Also moved classes from __init__ to their own file\nin reporter.", {"tags": ["NN", "HYPH", "NN", "NNS", "NN", "IN", "DT", "NNS", "NN", "_SP", "DT", "NN", "TO", "VB", "JJR", "NN", "NN", "IN", "DT", "NNS", "NN", "_SP", "VBZ", "RB", "VB", "IN", "NN", ".", "DT", "NN", "NN", "RB", "VBZ", "_SP", "IN", "NN", ".", "RB", "VBN", "NNS", "IN", "NNP", "NNP", "NN", "NNP", "NNP", "IN", "PRP$", "JJ", "NN", "_SP", "IN", "NN", "."]}], ["Refactor - Merge normalize text in utils.py\n\nNow that there is no more circular import we can do that.", {"tags": ["NN", "HYPH", "NNP", "VBP", "NN", "IN", "ADD", "_SP", "RB", "IN", "EX", "VBZ", "DT", "RBR", "JJ", "NN", "PRP", "MD", "VB", "DT", "."]}], ["Refactor - Remove circular import between utils and reporter\n\nReportsHandlerMixIn was importing Nodes from reporter and is\nprobably more suited for the reporter package anyway.", {"tags": ["NN", "HYPH", "VB", "JJ", "NN", "IN", "NNS", "CC", "NN", "_SP", "NNP", "VBD", "VBG", "NNS", "IN", "NN", "CC", "VBZ", "_SP", "RB", "RBR", "JJ", "IN", "DT", "NN", "NN", "RB", "."]}], ["Refactor - Avoid intra-packages circular dependencies for constants\n\nSome constants were package internal but were used by multiple\npackages. This created circular dependencies. By creating a\nfile for constants we make sure this does not happen because\nwe won't import everything important in this file and every\nthing else can depend on it.", {"tags": ["NN", "HYPH", "VB", "NN", "JJ", "NNS", "JJ", "NNS", "IN", "NNS", "_SP", "DT", "NNS", "VBD", "VB", "JJ", "CC", "VBD", "VBN", "IN", "JJ", "_SP", "NNS", ".", "DT", "VBD", "JJ", "NNS", ".", "IN", "VBG", "DT", "_SP", "NN", "IN", "NNS", "PRP", "VBP", "JJ", "DT", "VBZ", "RB", "VB", "IN", "_SP", "PRP", "MD", "RB", "VB", "NN", "JJ", "IN", "DT", "NN", "CC", "DT", "_SP", "NN", "RB", "MD", "VB", "IN", "PRP", "."]}], ["Pin sphinx to the latest and fix the warning it caused", {"tags": ["NN", "NN", "IN", "DT", "JJS", "CC", "VB", "DT", "NN", "PRP", "VBD"]}], ["Support postponed evaluation of annotations for variable annotations.\n\nClose #2838", {"tags": ["NN", "VBD", "NN", "IN", "NNS", "IN", "JJ", "NNS", ".", "_SP", "VB", "$", "CD"]}], ["Feat - Makes C0412 (ungrouped-imports) compatible with isort (#2824)\n\nCloses #2806.", {"tags": ["NN", "HYPH", "VBZ", "NN", "-LRB-", "NN", "HYPH", "NNS", "-RRB-", "VBP", "IN", "NN", "-LRB-", "$", "CD", "-RRB-", "_SP", "VBZ", "$", "CD", "."]}], ["Style - Re-Apply black following the isort cleanup\n\nChange with isort triggered change with black.", {"tags": ["NN", "HYPH", "NNP", "HYPH", "VB", "NN", "VBG", "DT", "NN", "NN", "_SP", "NN", "IN", "NN", "VBN", "NN", "IN", "NN", "."]}], ["Style - Apply isort on all apllicable files", {"tags": ["NN", "HYPH", "VB", "NN", "IN", "DT", "JJ", "NNS"]}], ["Refactor - Rename PylintASTWalker to ASTWalker\n\nFor obvious reasons. See review here :\nhttps://github.com/PyCQA/pylint/pull/2654#discussion_r263843101", {"tags": ["NN", "HYPH", "NNP", "NNP", "TO", "VB", "_SP", "IN", "JJ", "NNS", ".", "VB", "NN", "RB", ":", "_SP", "NN"]}], ["Refactor - Create a unittest file for MessageStore\n\nTaken from unittest_lint.py", {"tags": ["NN", "HYPH", "VB", "DT", "JJS", "NN", "IN", "NNP", "_SP", "VBN", "IN", "ADD"]}], ["Refactor - Move test_register_error in pylint.message test", {"tags": ["NN", "HYPH", "VB", "NN", "IN", "NN", "NN"]}], ["Refactor - Move test_create_invalid_message_type in pylint.message test", {"tags": ["NN", "HYPH", "VB", "NN", "IN", "NN", "NN"]}], ["Refactor - Create a unittest file for the pylint.message package", {"tags": ["NN", "HYPH", "VB", "DT", "JJS", "NN", "IN", "DT", "NN", "NN"]}], ["Refactor - Create a pylint.message package\n\nThere is a lot of Message related class in Utils\nthis warrant the creation of a new package.\n\nSee also review for burst utils.py into a package here:\nhttps://github.com/PyCQA/pylint/pull/2654#issuecomment-470748956", {"tags": ["NN", "HYPH", "VB", "DT", "JJ", "NN", "_SP", "EX", "VBZ", "DT", "NN", "IN", "NN", "JJ", "NN", "IN", "NNP", "_SP", "DT", "NN", "DT", "NN", "IN", "DT", "JJ", "NN", ".", "_SP", "VB", "RB", "VB", "IN", "VBN", "ADD", "IN", "DT", "NN", "RB", ":", "_SP", "ADD"]}], ["Refactor - Move _rest_format_section in message_handler_mix_in.py\n\nFollowing review see : https://github.com/PyCQA/pylint/pull/2654#issuecomment-470748956", {"tags": ["NN", "HYPH", "NNP", "NNP", "NN", "IN", "NN", "_SP", "VBG", "NN", "NN", ":", "ADD"]}], ["Refactor - Create a file for each class in utils", {"tags": ["NN", "HYPH", "VB", "DT", "NN", "IN", "DT", "NN", "IN", "NNS"]}], ["Refactor - Create a file for the MessageStore class", {"tags": ["NN", "HYPH", "VB", "DT", "NN", "IN", "DT", "NNP", "NN"]}], ["Pin dependencies to non-breaking version ranges", {"tags": ["NN", "NNS", "IN", "JJ", "JJ", "JJ", "NN", "VBZ"]}], ["Master is now 2.4", {"tags": ["NN", "VBZ", "RB", "CD"]}], ["CRF: added a separate test for the bugfix", {"tags": ["NN", ":", "VBD", "DT", "JJ", "NN", "IN", "DT", "NN"]}], ["Fixme should be triggered only in comments\n\nCloses #2321", {"tags": ["NN", "MD", "VB", "VBN", "RB", "IN", "NNS", "_SP", "VBZ", "$", "CD"]}], ["Expose/export BaseTokenChecker in __all__ as well?\n\nHi,\r\n\r\nI was using `BaseTokenChecker` when my IDE complained it wasn't in the `__init__`'s `__all__` variable. Any reason for not having it there? Learned about `BaseTokenChecker` after finding it in [another checker that uses it too](https://github.com/PyCQA/pylint/blob/master/pylint/extensions/check_elif.py).\r\n\r\nCheers\r\nBruno", {"tags": ["NN", "CC", "NN", "CD", "IN", "NNP", "NNP", "DT", "NNP", "NNP", "RB", "RB", ".", "_SP", "UH", ",", "_SP", "PRP", "VBD", "VBG", "''", "CD", "''", "WRB", "PRP$", "NNP", "VBD", "PRP", "VBD", "RB", "IN", "DT", "''", "NNP", "NNP", "NN", "NNP", "NNP", "''", "POS", "''", "NNP", "NNP", "DT", "NNP", "NNP", "''", "NN", ".", "DT", "NN", "IN", "RB", "VBG", "PRP", "RB", ".", "VBN", "IN", "''", "CD", "''", "IN", "VBG", "PRP", "IN", "-LRB-", "DT", "NN", "WDT", "VBZ", "PRP", "ADD", "SYM", "NNP", "SYM", "NN", "SYM", "NN", "SYM", "NNP", "SYM", "NN", "SYM", "NNS", "SYM", "CD", "-RRB-", ".", "_SP", "NNPS", "_SP", "NN"]}], ["Refactor - Made the error message predictable\n\nWhen refactoring MsgStore we don't want the test to break if two\nconflicting symbol or msgid are inverted. So we sort them, in order\nfor the error message to stay stable.", {"tags": ["NN", ",", "VBD", "DT", "NN", "NN", "JJ", "_SP", "WRB", "VBG", "NNP", "PRP", "VBP", "RB", "VB", "DT", "NN", "TO", "VB", "IN", "CD", "_SP", "VBG", "NN", "CC", "NN", "VBP", "VBN", ".", "RB", "PRP", "VBP", "PRP", ",", "IN", "NN", "_SP", "IN", "DT", "NN", "NN", "TO", "VB", "JJ", "."]}], ["Refactor - get_messages -> get_messages_from_checker", {"tags": ["NN", "HYPH", "NNPS", "HYPH", "NNS", "NN"]}], ["Refactor - Consistent function and variable name\n\nWe return a list of message definitions so we must rename\nget_message_definition to get_message_definitions. Resulting variables\nare now named message_definitions most of the time in order to improve\nreadability. (It was often named \"msgs\" or worst \"symbol\")", {"tags": ["NN", "HYPH", "JJ", "NN", "CC", "JJ", "NN", "_SP", "PRP", "VBP", "DT", "NN", "IN", "NN", "NNS", "IN", "PRP", "MD", "VB", "_SP", "NN", "IN", "NNS", ".", "NN", "NNS", "_SP", "VBP", "RB", "VBN", "NNS", "JJS", "IN", "DT", "NN", "IN", "NN", "TO", "VB", "_SP", "NN", ".", "-LRB-", "PRP", "VBD", "RB", "VBN", "``", "NN", "''", "CC", "RBS", "``", "NN", "''", "-RRB-"]}], ["Refactor - get_message_definition returning a list\n\nOf MessageDefinition instead of a MessageDefinition.", {"tags": ["NN", "HYPH", "NN", "VBG", "DT", "NN", "_SP", "IN", "NNP", "RB", "IN", "DT", "NNP", "."]}], ["Master is now 2.3.0", {"tags": ["NN", "VBZ", "RB", "NN"]}], ["Refactor ``bad-reversed-sequence`` to account for more objects that can define ``__reversed__``\n\nOne such object would be an enum class, for which ``__reversed__`` yields each individual enum.\nAs such, the check for ``bad-reversed-sequence`` needs to not differentiate between classes\nand instances when it comes for checking of ``__reversed__`` presence.\n\nClose #2598", {"tags": ["NN", "''", "''", "JJ", "HYPH", "JJ", "HYPH", "NN", "''", "''", "TO", "VB", "IN", "JJR", "NNS", "WDT", "MD", "VB", "''", "''", "NNP", "NNP", "VBD", "NNP", "NNP", "''", "''", "_SP", "CD", "JJ", "NN", "MD", "VB", "DT", "JJ", "NN", ",", "IN", "WDT", "''", "''", "NNP", "NNP", "VBD", "NNP", "NNP", "''", "''", "NNS", "DT", "JJ", "NN", ".", "_SP", "IN", "JJ", ",", "DT", "NN", "IN", "''", "''", "RB", "HYPH", "JJ", "HYPH", "NN", "''", "''", "VBZ", "TO", "RB", "VB", "IN", "NNS", "_SP", "CC", "NNS", "WRB", "PRP", "VBZ", "IN", "VBG", "IN", "''", "''", "NNP", "NNP", "VBD", "NNP", "NNP", "''", "''", "NN", ".", "_SP", "VB", "$", "CD"]}], ["Grammar", {"tags": ["NN"]}], ["Revert \"Check if an updated typing version fixes readthedocs\"\n\nThis reverts commit 9d224833f1052b3792df2765b52388e16cff4791.", {"tags": ["NN", "``", "NN", "IN", "DT", "VBN", "VBG", "NN", "VBZ", "NN", "``", "_SP", "DT", "VBZ", "VBP", "CD", "."]}], ["Grammar fixes to docs (#2492)\n\nFix grammar error in pylintrc files and CONTRIBUTORS.txt.", {"tags": ["NN", "NNS", "TO", "VB", "-LRB-", "$", "CD", "-RRB-", "_SP", "NN", "NN", "NN", "IN", "JJ", "NNS", "CC", "UH", "."]}], ["isinstance accept tuples of tuples so no need to join them", {"tags": ["NN", "VBP", "NNS", "IN", "NNS", "IN", "DT", "NN", "TO", "VB", "PRP"]}], ["Revert \"Don't emit import-self and cyclic-import...\"\n\nReverts commit bcf801f \"Don't emit import-self and cyclic-import for\nrelative imports of modules with the same name as the package itself.\"\n\nThe value from astroid.modutils.get_module_part no longer returns just\nthe package from a module import, as indicated by the unit tests passing\nwithout the filtering code.", {"tags": ["NN", "``", "VBP", "RB", "VB", "NN", "HYPH", "NN", "CC", "JJ", "HYPH", "NN", ":", "''", "_SP", "NNS", "VBP", "JJ", "``", "VBP", "RB", "VB", "NN", "HYPH", "NN", "CC", "JJ", "HYPH", "NN", "IN", "_SP", "JJ", "NNS", "IN", "NNS", "IN", "DT", "JJ", "NN", "IN", "DT", "NN", "PRP", ".", "''", "_SP", "DT", "NN", "IN", "ADD", "RB", "JJR", "VBZ", "RB", "_SP", "DT", "NN", "IN", "DT", "JJ", "NN", ",", "IN", "VBN", "IN", "DT", "NN", "VBZ", "VBG", "_SP", "IN", "DT", "VBG", "NN", "."]}], ["Infer decorated methods when looking for method-hidden\n\nClose #2369", {"tags": ["NN", "VBN", "NNS", "WRB", "VBG", "IN", "NN", "HYPH", "VBN", "_SP", "JJ", "$", "CD"]}], ["refactor is_defined_before.\nadd a new function is_defined_in_scope which can be used independently.\nis_defined_before also uses this function.", {"tags": ["NN", "NNP", ".", "_SP", "VBP", "DT", "JJ", "NN", "NNP", "WDT", "MD", "VB", "VBN", "RB", ".", "_SP", "NNP", "RB", "VBZ", "DT", "NN", "."]}], ["Rename variables to remove licentious language", {"tags": ["NN", "NNS", "TO", "VB", "JJ", "NN"]}], ["master is now 2.2", {"tags": ["NN", "VBZ", "RB", "CD"]}], ["Prefix rst autolabels with filename to prevent collisions from include\n\nFix cross reference labels", {"tags": ["NN", "JJ", "NNS", "IN", "NN", "TO", "VB", "NNS", "IN", "VBP", "_SP", "NN", "VB", "NN", "NNS"]}], ["Suppress undefined-variable for self referential class in lamdbas (#2362)\n\nThis works because execution of the lambda code is\r\ntypically deferred until the class definition is built.\r\n\r\nAlso avoid suppression for default arguments of lambda's\r\nif the class scope is the immediate parent scope\r\nof the lambda.\r\n\r\nClose #704", {"tags": ["NN", "JJ", "HYPH", "NN", "IN", "NN", "JJ", "NN", "IN", "NNP", "-LRB-", "$", "CD", "-RRB-", "_SP", "DT", "VBZ", "IN", "NN", "IN", "DT", "NN", "NN", "VBZ", "_SP", "RB", "VBN", "IN", "DT", "NN", "NN", "VBZ", "VBN", ".", "_SP", "RB", "VB", "NN", "IN", "NN", "NNS", "IN", "NN", "POS", "_SP", "IN", "DT", "NN", "NN", "VBZ", "DT", "JJ", "NN", "NN", "_SP", "IN", "DT", "NN", ".", "_SP", "JJ", "$", "CD"]}], ["Documentation fixes for the release and add Nick as a contributor", {"tags": ["NN", "VBZ", "IN", "DT", "NN", "CC", "VB", "NNP", "IN", "DT", "NN"]}], ["Refactor duplicate code in is_defined_before\n\nisinstance can take multiple tuples", {"tags": ["NN", "VBP", "NN", "IN", "NNP", "_SP", "NN", "MD", "VB", "JJ", "NNS"]}], ["frozenset is an iterating context for dict.values() and friends", {"tags": ["NN", "VBZ", "DT", "VBG", "NN", "IN", "NNS", "-LRB-", "-RRB-", "CC", "NNS"]}], ["Emit consider-using-get only if the target is a Name, as this is the pattern we try to detect\n\nClose #2254", {"tags": ["NN", "VB", "HYPH", "VBG", "HYPH", "VB", "RB", "IN", "DT", "NN", "VBZ", "DT", "NN", ",", "IN", "DT", "VBZ", "DT", "NN", "PRP", "VBP", "TO", "VB", "_SP", "VB", "$", "CD"]}], ["Rephrase PYLINTHOME description", {"tags": ["NN", "NN", "NN"]}], ["Escape backslashes in man page formatter help output", {"tags": ["NN", "NNS", "IN", "NN", "NN", "NN", "VBP", "NN"]}], ["Document jobs=0 behavior in help message and man page", {"tags": ["NN", "NNP", "NN", "IN", "NN", "NN", "CC", "NN", "NN"]}], ["Update links in readme.rst to http://pylint.pycqa.org/ (#2169)\n\nI saw on Twitter that http://pylint.pycqa.org/ is the preferred url over pylint.org.", {"tags": ["NN", "NNS", "IN", "NN", "IN", "NNP", "-LRB-", "$", "CD", "-RRB-", "_SP", "PRP", "VBD", "IN", "NNP", "IN", "NNP", "VBZ", "DT", "JJ", "NN", "IN", "ADD", "."]}], ["pylint is 15  years old, this is mature enough alright", {"tags": ["NN", "VBZ", "CD", "_SP", "NNS", "JJ", ",", "DT", "VBZ", "JJ", "RB", "UH"]}], ["Style - Readability changes in MessagesStore\n\nUse of f-strings in Python 3. Updated the docstrings with spinx syntax.\nRename variable to be clearer and use @staticmethoc when possible.\n\nFollowing review of #2036", {"tags": ["NN", "HYPH", "NN", "NNS", "IN", "NNP", "_SP", "NN", "IN", "NNP", "HYPH", "NNS", "IN", "NNP", "CD", ".", "VBD", "DT", "NNS", "IN", "JJ", "NN", ".", "_SP", "NNP", "NN", "TO", "VB", "JJR", "CC", "VB", "VBZ", "WRB", "JJ", ".", "_SP", "VBG", "NN", "IN", "$", "CD"]}], ["Refactor - Better error message for inconsistent checker", {"tags": ["NN", "HYPH", "JJR", "NN", "NN", "IN", "NN", "NN"]}], ["Refactor - Better error message for duplicated msgid or symbol\n\nCreate a function to get message definitions list from a checker.\nCreate a function for checking checker consistency\nCreate a function in order to register a MessageDefinition\n\nCorrected following the review of pull-request #2036 by Ashley Whetter and PCManticore.", {"tags": ["NN", "HYPH", "JJR", "NN", "NN", "IN", "VBN", "NN", "CC", "NN", "_SP", "VB", "DT", "NN", "TO", "VB", "NN", "NNS", "NN", "IN", "DT", "NN", ".", "_SP", "VB", "DT", "NN", "IN", "VBG", "NN", "NN", "_SP", "VB", "DT", "NN", "IN", "NN", "TO", "VB", "DT", "NNP", "_SP", "VBN", "VBG", "DT", "NN", "IN", "NN", "HYPH", "NN", "$", "CD", "IN", "NNP", "NNP", "CC", "NNP", "."]}], ["fixme check accounts for lowercase todos\n\nClose #2029", {"tags": ["NN", "NN", "NNS", "IN", "NN", "NN", "_SP", "JJ", "$", "CD"]}], ["defaultdict and subclasses of dict are now handled for dict-iter-* checks\n\nClose #2005", {"tags": ["NN", "CC", "NNS", "IN", "NN", "VBP", "RB", "VBN", "IN", "NN", "HYPH", "NN", "NFP", "NNS", "_SP", "VB", "$", "CD"]}], ["Revert \"Proposal of a fix for bug #1950\"", {"tags": ["NN", "``", "NN", "IN", "DT", "NN", "IN", "NN", "NN", "CD", "''"]}], ["Add of ChangeLog and whatsnew entries", {"tags": ["NN", "IN", "NNP", "CC", "JJ", "NNS"]}], ["Add of get_effective_max_line_number in FileState class + calling it in is_message_enabled.", {"tags": ["NN", "IN", "NN", "IN", "NNP", "NN", "SYM", "VBG", "PRP", "IN", "NNP", "."]}], ["Catch string.letters with the Python 3 porting checker\n\nClose #1935", {"tags": ["NN", "NNS", "IN", "DT", "NNP", "CD", "VBG", "NN", "_SP", "VB", "$", "CD"]}], ["Supress linting output", {"tags": ["NN", "VBG", "NN"]}], ["readthedocs does not run on Python 3.6 apparently", {"tags": ["NN", "VBZ", "RB", "VB", "IN", "NNP", "CD", "RB"]}], ["epylint: Remove incorrect docstring\n\nThis example has been introduced in #5821.\r\nHowever, it does not work any more.\r\nCloses #1870", {"tags": ["NN", ":", "VB", "JJ", "VBG", "_SP", "DT", "NN", "VBZ", "VBN", "VBN", "IN", "$", "CD", ".", "_SP", "RB", ",", "PRP", "VBZ", "RB", "VB", "RB", "RBR", ".", "_SP", "VBZ", "$", "CD"]}], ["user-guide: Change pylint call from python example\n\nCloses  #1870", {"tags": ["NN", "HYPH", "NN", ":", "VB", "NN", "NN", "IN", "JJ", "NN", "_SP", "VBZ", "_SP", "$", "CD"]}], ["Spelling fixes", {"tags": ["NN", "NNS"]}], ["Add of ChangeLog and whatsnew entries", {"tags": ["NN", "IN", "NNP", "CC", "JJ", "NNS"]}], ["Add of docstring in _import_node_context method.\nAdd of is_node_inside_try_except method.\nAvoiding code duplication by using _import_node_context method.", {"tags": ["NN", "IN", "VBG", "IN", "NNP", "JJ", "NN", ".", "_SP", "NN", "IN", "NNP", "NN", ".", "_SP", "VBG", "NN", "NN", "IN", "VBG", "NNP", "JJ", "NN", "."]}], ["Remove backports dependency", {"tags": ["NN", "VBZ", "NN"]}], ["Update committers list, mark both Lukasz and Guillaume as new committers", {"tags": ["NN", "NNS", "VBP", ",", "VBP", "DT", "NNP", "CC", "NNP", "IN", "JJ", "NNS"]}], ["Add of ChangeLog and whatsnew entries", {"tags": ["NN", "IN", "NNP", "CC", "JJ", "NNS"]}], ["Add of four test dealing with if statements and function definition under them", {"tags": ["NN", "IN", "CD", "NN", "VBG", "IN", "IN", "NNS", "CC", "NN", "NN", "IN", "PRP"]}], ["Deletion of a message which was already here.", {"tags": ["NN", "IN", "DT", "NN", "WDT", "VBD", "RB", "RB", "."]}], ["Add of two tests concerning the issue 1771. One that must raise an inconsistent-return-statements and another that must not.", {"tags": ["NN", "IN", "CD", "NNS", "VBG", "DT", "NN", "CD", ".", "CD", "WDT", "MD", "VB", "DT", "NN", "HYPH", "NN", "HYPH", "NNS", "CC", "DT", "DT", "MD", "RB", "."]}], ["Add of ChangeLog and whatsnew entries for 2.0 version", {"tags": ["NN", "IN", "NNP", "CC", "JJ", "NNS", "IN", "CD", "NN"]}], ["Master is now 2.0", {"tags": ["NN", "VBZ", "RB", "CD"]}], ["Bump to 1.8.1 to republish the wheel with correct version", {"tags": ["NN", "IN", "VB", "TO", "VB", "DT", "NN", "IN", "JJ", "NN"]}], ["Pylint doesn't take anymore the default rcfile if the rcfile specified on the command line doesn't exist (#1768)", {"tags": ["NN", "VBZ", "RB", "VB", "RB", "DT", "NN", "NN", "IN", "DT", "NN", "VBN", "IN", "DT", "NN", "NN", "VBZ", "RB", "VB", "-LRB-", "$", "CD", "-RRB-"]}], ["Add of ChangeLog and whatsnew entries", {"tags": ["NN", "IN", "NNP", "CC", "JJ", "NNS"]}], ["Add of 2 very long lines with a disable=fixme directive that should not deactivate emission of line-too-long messages.", {"tags": ["NN", "IN", "CD", "RB", "JJ", "NNS", "IN", "DT", "NN", "SYM", "NN", "NN", "WDT", "MD", "RB", "VB", "NN", "IN", "NN", "HYPH", "RB", "HYPH", "JJ", "NNS", "."]}], ["Jython is no longer supported", {"tags": ["NN", "VBZ", "RB", "RBR", "VBN"]}], ["Add of ChangeLog and whatsnew entries.", {"tags": ["NN", "IN", "NNP", "CC", "JJ", "NNS", "."]}], ["Respect disable=... in config with --py3k (#1726)", {"tags": ["NN", "NN", ":", "IN", "NN", "IN", "NNP", "-LRB-", "$", "CD", "-RRB-"]}], ["Document score section and option in output.rst\n\nAdds basic documentation for adjusting the evaluation output.\r\n\r\nThis option is important because it explains how to suppress all\r\noutput when the code is free of errors and warnings.", {"tags": ["NN", "NN", "NN", "CC", "NN", "IN", "ADD", "_SP", "VBZ", "JJ", "NN", "IN", "VBG", "DT", "NN", "NN", ".", "_SP", "DT", "NN", "VBZ", "JJ", "IN", "PRP", "VBZ", "WRB", "TO", "VB", "DT", "_SP", "NN", "WRB", "DT", "NN", "VBZ", "JJ", "IN", "NNS", "CC", "NNS", "."]}], ["Function redefinitions take in account dummy-variables-rgx", {"tags": ["NN", "NNS", "VBP", "IN", "NN", "NN", "HYPH", "NN", "HYPH", "NN"]}], ["Use predefined sets of naming styles instead of explicit regexps (#1046)\n\nCloses #1013", {"tags": ["NN", "VBD", "NNS", "IN", "VBG", "NNS", "RB", "IN", "JJ", "NNS", "-LRB-", "$", "CD", "-RRB-", "_SP", "VBZ", "NN", "CD"]}], ["Support for Google docstring Keyword Args sections (#1664)\n\n* Add of a new regexp for Keyword Args|Arguments|Parameters. Extending the list of entries in match_param_docs method with the results of self._parse_section(new_regexp)\r\n\r\n* Add of 2 unittests for Google docstring with Args and Keyword Args.\r\n\r\n* Add of ChangeLog and whatsnew entries", {"tags": ["NN", "IN", "NNP", "VBG", "NNP", "NNP", "NNS", "-LRB-", "$", "CD", "-RRB-", "_SP", "NFP", "NN", "IN", "DT", "JJ", "NN", "IN", "NNP", "NNPS", ".", "VBG", "DT", "NN", "IN", "NNS", "IN", "CD", "NN", "IN", "DT", "NNS", "IN", ",", "-RRB-", "_SP", "NFP", "NN", "IN", "CD", "NNS", "IN", "NNP", "VBG", "IN", "NNPS", "CC", "NNP", "NNP", ".", "_SP", "NFP", "NN", "IN", "NNP", "CC", "JJ", "NNS"]}], ["Comma separated values in the configuration file appear one item per line\n\nThis change makes list-like output in all sections more readable (one item per line).", {"tags": ["NN", "VBD", "NNS", "IN", "DT", "NN", "NN", "VB", "CD", "NN", "IN", "NN", "_SP", "DT", "NN", "VBZ", "NN", "HYPH", "JJ", "NN", "IN", "DT", "NNS", "RBR", "JJ", "-LRB-", "CD", "NN", "IN", "NN", "-RRB-", "."]}], ["cProfile is not deprecated in Python 3 apparently. Close #1612", {"tags": ["NN", "VBZ", "RB", "VBN", "IN", "NNP", "CD", "RB", ".", "JJ", "$", "CD"]}], ["ImportsChecker: check all messages in leave_module (#1611)\n\nAttempts to help with #1495", {"tags": ["NN", ":", "VB", "DT", "NNS", "IN", "NNP", "-LRB-", "$", "CD", "-RRB-", "_SP", "NNS", "TO", "VB", "IN", "$", "CD"]}], ["spelling checker: parametrize count of suggestions\n\n* parametrize count of suggestions based on config parameter\r\n* fix tests on Appveyor", {"tags": ["NN", "NN", ":", "VB", "NN", "IN", "NNS", "_SP", "NFP", "VB", "NN", "IN", "NNS", "VBN", "IN", "NN", "NN", "_SP", "NFP", "NN", "NNS", "IN", "NN"]}], ["acceptance tests, not run by default (#1360)", {"tags": ["NN", "NNS", ",", "RB", "VBN", "IN", "NN", "-LRB-", "$", "CD", "-RRB-"]}], ["Typo", {"tags": ["NN"]}], ["Typo", {"tags": ["NN"]}], ["Log and crash correctly a child process when an error occurs. Close #1445", {"tags": ["NN", "CC", "VB", "RB", "DT", "NN", "NN", "WRB", "DT", "NN", "VBZ", ".", "VB", "$", "CD"]}], ["Protocol checks (not-a-mapping, not-an-iterable and co.) aren't emitted on classes with dynamic getattr. Close #1579", {"tags": ["NN", "NNS", "-LRB-", "RB", "HYPH", "DT", "HYPH", "NN", ",", "RB", "HYPH", "DT", "HYPH", "JJ", "CC", "NNP", "-RRB-", "VBP", "RB", "VBN", "IN", "NNS", "IN", "JJ", "NN", ".", "JJ", "$", "CD"]}], ["Skip files or directories passed at command line when they are ignored. Close #908", {"tags": ["NN", "NNS", "CC", "NNS", "VBD", "IN", "NN", "NN", "WRB", "PRP", "VBP", "VBN", ".", "VB", "$", "CD"]}], ["Optimize effect of disabling ungrouped-imports.\n\nDisabling 'ungrouped-imports' for a single line now prevents that line from triggering violations on subsequent lines.", {"tags": ["NN", "NN", "IN", "VBG", "VBN", "HYPH", "NNS", ".", "_SP", "VBG", "``", "NN", "HYPH", "NNS", "''", "IN", "DT", "JJ", "NN", "RB", "VBZ", "DT", "NN", "IN", "VBG", "NNS", "IN", "JJ", "NNS", "."]}], ["Optimize effect of disabling import warnings\n\nDisabling 'wrong-import-order' or 'wrong-import-position' for a single line now prevents that line from triggering violations on subsequent lines.", {"tags": ["NN", "NN", "IN", "VBG", "NN", "NNS", "_SP", "VBG", "``", "JJ", "HYPH", "NN", "HYPH", "NN", "''", "CC", "``", "JJ", "HYPH", "NN", "HYPH", "NN", "''", "IN", "DT", "JJ", "NN", "RB", "VBZ", "DT", "NN", "IN", "VBG", "NNS", "IN", "JJ", "NNS", "."]}], ["Typo : dictionnary => dictionary", {"tags": ["NN", ":", "NNP", "NFP", "XX", "XX"]}], ["Tab replaced by spaces", {"tags": ["NN", "VBN", "IN", "NNS"]}], ["Flag sets module as having moved in Python 3 (#1570)", {"tags": ["NN", "NNS", "NN", "IN", "VBG", "VBN", "IN", "NNP", "CD", "-LRB-", "$", "CD", "-RRB-"]}], ["import-error now is correctly emitted for import nodes when lower level messages are disabled\n\nCloses #1533", {"tags": ["NN", "HYPH", "NN", "RB", "VBZ", "RB", "VBN", "IN", "NN", "NNS", "WRB", "JJR", "NN", "NNS", "VBP", "JJ", "_SP", "NNS", "$", "CD"]}], ["docparams can find property return types", {"tags": ["NN", "MD", "VB", "NN", "NN", "NNS"]}], ["docparams checks for errors in a setters property docstring\n\nFixes #1125", {"tags": ["NN", "NNS", "IN", "NNS", "IN", "DT", "NNS", "NN", "VBG", "_SP", "NNP", "$", "CD"]}], ["Unskip two functional tests skipped by mistake (#1550)\n\n* Unskip two functional tests skipped by mistake\r\n\r\nmax_pyver=2.7 caused tests to be not run on Python 2.7.x\r\n\r\n* Add relevant disables to make those tests pass", {"tags": ["NN", "CD", "JJ", "NNS", "VBN", "IN", "NN", "-LRB-", "$", "CD", "-RRB-", "_SP", "NFP", "NN", "CD", "JJ", "NNS", "VBN", "IN", "NN", "_SP", "PRP", "VBD", "NNS", "TO", "VB", "RB", "VBN", "IN", "NNP", "CD", "_SP", "NFP", "VB", "JJ", "NNS", "TO", "VB", "DT", "NNS", "VB"]}], ["Remove mentions of deprecated astroid node names (#1485)", {"tags": ["NN", "NNS", "IN", "JJ", "NNP", "NNP", "NNS", "-LRB-", "$", "CD", "-RRB-"]}], ["master is now at 1.8", {"tags": ["NN", "VBZ", "RB", "IN", "CD"]}], ["Spelling fixes (#1397)", {"tags": ["NN", "NNS", "-LRB-", "$", "CD", "-RRB-"]}], ["FAQ: clarify that Pylint 1.7 is required when Python 3.6 features are used (#1402)\n\nCloses #1399", {"tags": ["NN", ":", "VB", "IN", "NN", "CD", "VBZ", "VBN", "WRB", "NNP", "CD", "NNS", "VBP", "VBN", "-LRB-", "$", "CD", "-RRB-", "_SP", "VBZ", "$", "CD"]}], ["docparams now ignores \"optional\" specifier on parameter docs (#1391)\n\nFixes #1383", {"tags": ["NN", "RB", "VBZ", "``", "JJ", "''", "NN", "IN", "NN", "NNS", "-LRB-", "$", "CD", "-RRB-", "_SP", "VBZ", "$", "CD"]}], ["refactor checker to perform import once", {"tags": ["NN", "NN", "TO", "VB", "NN", "RB"]}], ["epylint: corrects msg-template object (#1311)\n\nThe way this object is defined, won't let the user modify the message\r\ntemplate when pylint is called from a python script. Rearranging the\r\norder of variables on its definition prevents this behavior.\r\n\r\nSigned-off-by: Daniela Plascencia <daniela.plascencia@linux.intel.com>", {"tags": ["NN", ":", "NNS", "NN", "HYPH", "NN", "NN", "-LRB-", "$", "CD", "-RRB-", "_SP", "DT", "NN", "DT", "NN", "VBZ", "VBN", ",", "MD", "RB", "VB", "DT", "NN", "VB", "DT", "NN", "_SP", "NN", "WRB", "NN", "VBZ", "VBN", "IN", "DT", "NN", "NN", ".", "VBG", "DT", "_SP", "NN", "IN", "NNS", "IN", "PRP$", "NN", "VBZ", "DT", "NN", ".", "_SP", "VBN", "HYPH", "IN", "HYPH", "RB", ":", "NNP", "NNP", "XX", "NNP", "."]}], ["Respect checks for Python 2 (#1196)\n\nFrequently 2and3 code will gate some Python 3 specific code with something like:\r\n\r\n```python\r\nif six.PY2:\r\n  #  something python 2 only\r\n```\r\n\r\nThis PR will respect those branches.\r\n\r\nOne thing I wasn't able to do was handle `else` branches here.  e.g.:\r\n\r\n```python\r\nif six.PY3:\r\n  # something python 3 only\r\nelse:\r\n  # something python 2 only\r\n```", {"tags": ["NN", "NNS", "IN", "NNP", "CD", "-LRB-", "$", "CD", "-RRB-", "_SP", "RB", "CD", "NN", "MD", "VB", "DT", "NNP", "CD", "JJ", "NN", "IN", "NN", "IN", ":", "_SP", "''", "''", "''", "NN", "_SP", "IN", "CD", ".", "NN", ":", "_SP", "$", "_SP", "NN", "NN", "CD", "RB", "_SP", "''", "''", "''", "_SP", "DT", "NNP", "MD", "VB", "DT", "NNS", ".", "_SP", "CD", "NN", "PRP", "VBD", "RB", "JJ", "TO", "VB", "VBD", "VB", "''", "RB", "''", "NNS", "RB", ".", "_SP", "NNP", ":", "_SP", "''", "''", "''", "NN", "_SP", "IN", "CD", ".", "NNP", ":", "_SP", "$", "NN", "NN", "CD", "RB", "_SP", "RB", ":", "_SP", "$", "NN", "NN", "CD", "RB", "_SP", "''", "''", "''"]}], ["Refactor pytest fixtures. (#1255)", {"tags": ["NN", "NN", "NNS", ".", "-LRB-", "$", "CD", "-RRB-"]}], ["Document missing changes in 2.0", {"tags": ["NN", "VBG", "NNS", "IN", "CD"]}], ["Fix errors introduced by change to arguments-differ (#1252)", {"tags": ["NN", "NNS", "VBN", "IN", "NN", "IN", "NNS", "HYPH", "NN", "-LRB-", "$", "CD", "-RRB-"]}], ["design_analysis: simplify getting count of ignored arguments", {"tags": ["NN", ":", "VB", "VBG", "NN", "IN", "VBN", "NNS"]}], [".getitem expects only node, wrap the index in a Const value.", {"tags": ["NN", "VBZ", "RB", "NNP", ",", "VB", "DT", "NN", "IN", "DT", "NNP", "NN", "."]}], ["Report when __slots__ is a simple string and not a non-string container (#1171)\n\n* Report when __slots__ is a simple string and not a non-string container\r\n\r\n* Update ChangeLog", {"tags": ["NN", "WRB", "NNP", "NNP", "VBZ", "NNP", "NNP", "VBZ", "DT", "JJ", "NN", "CC", "RB", "DT", "JJ", "JJ", "JJ", "NN", "-LRB-", "$", "CD", "-RRB-", "_SP", "NFP", "NN", "WRB", "NNP", "NNP", "VBZ", "NNP", "NNP", "VBZ", "DT", "JJ", "NN", "CC", "RB", "DT", "JJ", "JJ", "JJ", "NN", "_SP", "NFP", "NN", "NN"]}], ["Support having plugins with options, sharing the same name\n\nWe do support plugins that have the same name, but when both of them are adding options that can be used, pylint crashes, since it already processed the options of the first plugin, introducing the plugin section in the configuration. The patch verifies that an option group already exists and if so, it does not add the same section twice, thus avoiding the duplicate section error.", {"tags": ["NN", "VBG", "NNS", "IN", "NNS", ",", "VBG", "DT", "JJ", "NN", "_SP", "PRP", "VBP", "VB", "NNS", "WDT", "VBP", "DT", "JJ", "NN", ",", "CC", "WRB", "DT", "IN", "PRP", "VBP", "VBG", "NNS", "WDT", "MD", "VB", "VBN", ",", "NN", "NNS", ",", "IN", "PRP", "RB", "VBD", "DT", "NNS", "IN", "DT", "JJ", "NN", ",", "VBG", "DT", "NN", "NN", "IN", "DT", "NN", ".", "DT", "NN", "VBZ", "IN", "DT", "NN", "NN", "RB", "VBZ", "CC", "IN", "RB", ",", "PRP", "VBZ", "RB", "VB", "DT", "JJ", "NN", "RB", ",", "RB", "VBG", "DT", "JJ", "NN", "NN", "."]}], ["Spelling fix (#1003)", {"tags": ["NN", "NN", "-LRB-", "$", "CD", "-RRB-"]}], ["Rework documentation\n\nChanged the documentation in couple of places, merged sections together,\ndescribed testing procedures and added more up-to-date information\nin general.", {"tags": ["NN", "NN", "_SP", "VBD", "DT", "NN", "IN", "NN", "IN", "NNS", ",", "JJ", "NNS", "RB", ",", "_SP", "VBD", "NN", "NNS", "CC", "VBD", "JJR", "RP", "HYPH", "IN", "HYPH", "NN", "NN", "_SP", "IN", "NN", "."]}], ["Rename check_docstring to docstyle.", {"tags": ["NN", "VBG", "TO", "VB", "."]}], ["Import test from astroid and remove old regression tests for libraries we do not have installed (they were pretty much useless)", {"tags": ["NN", "NN", "IN", "NNP", "CC", "VB", "JJ", "NN", "NNS", "IN", "NNS", "PRP", "VBP", "RB", "VB", "VBN", "-LRB-", "PRP", "VBD", "RB", "RB", "JJ", "-RRB-"]}], ["iterparse is not actually deprecated, only its parameter. Close #947.", {"tags": ["NN", "VBZ", "RB", "RB", "VBN", ",", "RB", "PRP$", "NN", ".", "VB", "$", "CD", "."]}], ["Add pypi badge (#907)", {"tags": ["NN", "NN", "NN", "-LRB-", "$", "CD", "-RRB-"]}], ["Update of documentation's part describing regexp default values for symbol names (#896)", {"tags": ["NN", "IN", "NN", "POS", "NN", "VBG", "NN", "NN", "NNS", "IN", "NN", "NNS", "-LRB-", "$", "CD", "-RRB-"]}], ["epylint.py_run does not crash on big files, using .communicate() instead of .wait()\n\nClose #599", {"tags": ["NN", "VBZ", "RB", "VB", "IN", "JJ", "NNS", ",", "VBG", ".", "-LRB-", "-RRB-", "RB", "IN", ".", "-LRB-", "-RRB-", "_SP", "VB", "$", "CD"]}], ["pyreverse's --ignore can't be passed multiple times. Close #564.", {"tags": ["NN", "POS", "NN", "MD", "RB", "VB", "VBN", "JJ", "NNS", ".", "VB", "$", "CD", "."]}], ["Restructure Changelog entries so it's more obvious where some changes occurred.", {"tags": ["NN", "NN", "NNS", "IN", "PRP", "VBZ", "RBR", "JJ", "WRB", "DT", "NNS", "VBD", "."]}], ["Document that enable can appear only once in the configuration file\n\nClose #486", {"tags": ["NN", "DT", "VBP", "MD", "VB", "RB", "RB", "IN", "DT", "NN", "NN", "_SP", "RB", "$", "CD"]}], ["format: check for & warn about trailing newlines\n\nThe new tests also catch a lot of files in the pylint code base\nthat have trailing newlines, so clean them all up as well.\n\nClose #682", {"tags": ["NN", ":", "VB", "IN", "CC", "VB", "IN", "VBG", "NNS", "_SP", "DT", "JJ", "NNS", "RB", "VBP", "DT", "NN", "IN", "NNS", "IN", "DT", "NN", "NN", "NN", "_SP", "WDT", "VBP", "VBG", "NNS", ",", "CC", "VB", "PRP", "DT", "RP", "RB", "RB", ".", "_SP", "VB", "$", "CD"]}], ["Rename display_results to display_reports, the old name being deprecated.", {"tags": ["NN", "VBZ", "IN", "NNS", ",", "DT", "JJ", "NN", "VBG", "VBN", "."]}], ["Revert change from ead6051d\n\nThe refactoring introduced a subtle semantic change, which resulted\nin imports being skipped in functions where no global names were\npreviously defined. Closes issue #737.", {"tags": ["NN", "NN", "IN", "NN", "_SP", "DT", "NN", "VBD", "DT", "JJ", "JJ", "NN", ",", "WDT", "VBD", "_SP", "IN", "NNS", "VBG", "VBN", "IN", "NNS", "WRB", "DT", "JJ", "NNS", "VBD", "_SP", "RB", "VBN", ".", "NNS", "NN", "$", "CD", "."]}], ["master pylint is now 1.6.0", {"tags": ["NN", "NN", "VBZ", "RB", "CD"]}], ["Configure appveyor with the same configuration that astroid has.", {"tags": ["NN", "NN", "IN", "DT", "JJ", "NN", "WDT", "NN", "VBZ", "."]}], ["pylint/config.py: Add another check of the current working directory for `.pylintrc`.\n\n--HG--\nbranch : issue_538_pt2", {"tags": ["NN", "NFP", "ADD", ":", "VB", "DT", "NN", "IN", "DT", "JJ", "VBG", "NN", "IN", "''", "DT", "''", ".", "_SP", "NFP", "_SP", "NN", ":", "NN"]}], ["Refactor things through the imports checker\n\nThis patch transforms some public functions / methods to private\nand moves some blocks of code into their own functions. Through\nthe latter, a couple of new messages are now emitted even though\nthe module couldn't be imported, such as reimported, which doesn't\nmake sense to not emit in this case.", {"tags": ["NN", "NNS", "IN", "DT", "NNS", "NN", "_SP", "DT", "NN", "VBZ", "DT", "JJ", "NNS", "SYM", "NNS", "TO", "JJ", "_SP", "CC", "VBZ", "DT", "NNS", "IN", "NN", "IN", "PRP$", "JJ", "NNS", ".", "IN", "_SP", "DT", "JJ", ",", "DT", "NN", "IN", "JJ", "NNS", "VBP", "RB", "VBN", "RB", "IN", "_SP", "DT", "NN", "MD", "RB", "VB", "VBN", ",", "JJ", "IN", "VBN", ",", "WDT", "VBZ", "RB", "_SP", "VB", "NN", "TO", "RB", "VB", "IN", "DT", "NN", "."]}], ["pylint extension to check for use of \"else if\" instead of \"elsif\"\n\nrelated to issue #673", {"tags": ["NN", "NN", "TO", "VB", "IN", "NN", "IN", "``", "RB", "IN", "``", "RB", "IN", "``", "NN", "''", "_SP", "VBN", "TO", "VB", "$", "CD"]}], ["Check imports are located at the top of the module (right after docstring and comments)\n\nrelated to issue #692", {"tags": ["NN", "NNS", "VBP", "VBN", "IN", "DT", "NN", "IN", "DT", "NN", "-LRB-", "RB", "IN", "VBG", "CC", "NNS", "-RRB-", "_SP", "VBN", "TO", "VB", "$", "CD"]}], ["Check imports are ordered (standard, 3rd party, local) and grouped by package\n\n\nrelated to issue #692", {"tags": ["NN", "NNS", "VBP", "VBN", "-LRB-", "JJ", ",", "JJ", "NN", ",", "JJ", "-RRB-", "CC", "VBN", "IN", "NN", "_SP", "JJ", "TO", "VB", "$", "CD"]}], ["Fix instances of unneeded-not in pylint's codebase.", {"tags": ["NN", "NNS", "IN", "JJ", ":", "RB", "IN", "NN", "POS", "NN", "."]}], ["Add is to the checked operators", {"tags": ["NN", "VBZ", "IN", "DT", "VBN", "NNS"]}], ["Import has_known_bases and safe_infer back into pylint from astroid, until the latter stabilizes its API.\n\nCurrently astroid goes into a total revamp, having a couple of development branches with partially\nincompatible APIs, which means that pylint can't rely on the exact location of has_known_bases\nand safe_infer until astroid reaches a new major release. With this in mind, these two\nfunctions are backported in pylint again.", {"tags": ["NN", "NNS", "CC", "VB", "RB", "IN", "NN", "IN", "NNP", ",", "IN", "DT", "JJ", "VBZ", "PRP$", "NN", ".", "_SP", "RB", "NN", "VBZ", "IN", "DT", "JJ", "NN", ",", "VBG", "DT", "NN", "IN", "NN", "NNS", "IN", "RB", "_SP", "JJ", "NNS", ",", "WDT", "VBZ", "DT", "NN", "MD", "RB", "VB", "IN", "DT", "JJ", "NN", "IN", "NNS", "_SP", "CC", "VB", "IN", "NNP", "VBZ", "DT", "JJ", "JJ", "NN", ".", "IN", "DT", "IN", "NN", ",", "DT", "CD", "_SP", "NNS", "VBP", "VBN", "IN", "NN", "RB", "."]}], ["error E0201 is obsolete - now E1101\n\n--HG--\nbranch : remove-E0201-references", {"tags": ["NN", "NNP", "VBZ", "JJ", "HYPH", "RB", "NN", "_SP", "NFP", "_SP", "NN", ":", "NN", "HYPH", "NNS"]}], ["Rename 'unsubscriptable-value' message to 'unsubscriptable-object'", {"tags": ["NN", "''", "NN", "HYPH", "NN", "''", "NN", "IN", "''", "JJ", "HYPH", "NN", "''"]}], ["Refactor non-iterator-returned checker to use safe inference\n\nThis way it won't infer all possibles values of a node, only two at most.", {"tags": ["NN", "JJ", "JJ", "JJ", "HYPH", "VBN", "NN", "TO", "VB", "JJ", "NN", "_SP", "DT", "NN", "PRP", "MD", "RB", "VB", "DT", "NNS", "NNS", "IN", "DT", "NN", ",", "RB", "CD", "IN", "JJS", "."]}], ["Revert accidentally updated tox.ini file", {"tags": ["NN", "RB", "VBD", "ADD", "NN"]}], ["display properties as attributes in pyreverse class diagram", {"tags": ["NN", "NNS", "IN", "NNS", "IN", "NN", "NN", "NN"]}], ["Refactor iterable context checker\n\n--HG--\nbranch : iterable-checker", {"tags": ["NN", "JJ", "NN", "NN", "_SP", "NFP", "_SP", "NN", ":", "JJ", "HYPH", "NN"]}], ["Fix issue #314: bad-whitespace looks weird when the line does not end with newline", {"tags": ["NN", "VB", "$", "CD", ":", "JJ", "HYPH", "NN", "NNS", "JJ", "WRB", "DT", "NN", "VBZ", "RB", "VB", "IN", "NN"]}], ["Fix tests and use all the inference results when checking for bad-open-mode and deprecated-method", {"tags": ["NN", "NNS", "CC", "VB", "PDT", "DT", "NN", "VBZ", "WRB", "VBG", "IN", "JJ", "HYPH", "JJ", "HYPH", "NN", "CC", "VBN", "HYPH", "NN"]}], ["Deprecation check based on Python version", {"tags": ["NN", "NN", "VBN", "IN", "NNP", "NN"]}], ["Add tests for deprecation", {"tags": ["NN", "NNS", "IN", "NN"]}], ["Add tests for method deprecation", {"tags": ["NN", "NNS", "IN", "NN", "NN"]}], ["Fix tests when $HOME is unset in the environment.\n\ntox beginning with v2.0 does hide most environment from the tests, which means\ngetting $HOME/$USERDIR to reset it later will fail.\n\nWith this change, we delete the variable when it wasn't set when starting the\ntest.\n\n--HG--\nbranch : home-fix", {"tags": ["NN", "NNS", "WRB", "$", "NN", "VBZ", "JJ", "IN", "DT", "NN", ".", "_SP", "DT", "VBG", "IN", "CD", "VBZ", "VB", "JJS", "NN", "IN", "DT", "NNS", ",", "WDT", "VBZ", "_SP", "VBG", "$", "NN", "TO", "VB", "PRP", "RB", "MD", "VB", ".", "_SP", "IN", "DT", "NN", ",", "PRP", "VBP", "DT", "NN", "WRB", "PRP", "VBD", "RB", "VBN", "WRB", "VBG", "DT", "_SP", "NN", ".", "_SP", "NFP", "_SP", "NN", ":", "NN", "HYPH", "NN"]}], ["Rename F0401 (import-error) to E0401 as it is not a fatal pylint error\n\n--HG--\nbranch : rename-F0401-to-E0401", {"tags": ["NN", "NN", "-LRB-", "NN", "HYPH", "NN", "-RRB-", "TO", "NNP", "IN", "PRP", "VBZ", "RB", "DT", "JJ", "NN", "NN", "_SP", "NFP", "_SP", "NN", ":", "NN", "HYPH", "NNP", "HYPH", "NNP"]}], ["Revert partially the previous commit: let astroid return functions, not BoundMethods for staticmethods.", {"tags": ["NN", "RB", "DT", "JJ", "NN", ":", "VB", "VB", "NN", "NNS", ",", "RB", "NNP", "IN", "NNS", "."]}], ["Support using-constant-test for comprehensions.", {"tags": ["NN", "VBG", "HYPH", "JJ", "HYPH", "NN", "IN", "NNS", "."]}], ["Pylint understand super calls.", {"tags": ["NN", "VBP", "JJ", "NNS", "."]}], ["pylint/config.py: Check for `.pylintrc`, as well.", {"tags": ["NN", "NFP", "ADD", ":", "VB", "IN", "''", "DT", "''", ",", "RB", "RB", "."]}], ["Refactor exception catching blocks into a new function, node_ignores_exception, used to verify if a node is protected by an exception handler of specific type.", {"tags": ["NN", "NN", "NN", "NNS", "IN", "DT", "JJ", "NN", ",", "NN", ",", "VBN", "TO", "VB", "IN", "DT", "NN", "VBZ", "VBN", "IN", "DT", "NN", "NN", "IN", "JJ", "NN", "."]}], ["error_of_type can support multiple exceptions for the error_type parameter.", {"tags": ["NN", "MD", "VB", "JJ", "NNS", "IN", "DT", "NNP", "NN", "."]}], ["BaseReporter.add_message is scheduled for removal for Pylint 1.6, not 1.7.", {"tags": ["NN", "VBZ", "VBN", "IN", "NN", "IN", "NN", "CD", ",", "RB", "CD", "."]}], ["Port attribute-defined-outside-init to the new test style format.", {"tags": ["NN", "NN", "HYPH", "VBN", "HYPH", "NN", "HYPH", "NN", "IN", "DT", "JJ", "NN", "NN", "NN", "."]}], ["Test drone.io misbehaviour.", {"tags": ["NN", "ADD", "NN", "."]}], ["Cleanup.", {"tags": ["NN", "."]}], ["method visit_class is no longer necessary in the checker; auxiliary method _visit_methods_of_class in the unit test", {"tags": ["NN", "NNP", "VBZ", "DT", "RBR", "JJ", "IN", "DT", "NN", ":", "JJ", "NN", "NNP", "NNP", "IN", "DT", "NN", "NN"]}], ["check_docs: Handle class constructors from within visit_function.", {"tags": ["NN", ":", "VB", "NN", "NNS", "IN", "IN", "NN", "."]}], ["unit test for the option accept_no_param_doc", {"tags": ["NN", "NN", "IN", "DT", "NN", "NN"]}], ["check_docs: implementation of option \"accept-no-param-doc\"", {"tags": ["NN", ":", "NN", "IN", "NN", "``", "VB", "HYPH", "DT", "HYPH", "NN", "HYPH", "NN", "''"]}], ["pylint documentation: Demonstrate parameter documentation checking for Google and Numpy style as well.", {"tags": ["NN", "NN", ":", "VB", "NN", "NN", "VBG", "IN", "NNP", "CC", "JJ", "NN", "RB", "RB", "."]}], ["unit test for constructor parameter documentation in Google and Numpy style", {"tags": ["NN", "NN", "IN", "NN", "NN", "NN", "IN", "NNP", "CC", "JJ", "NN"]}], ["unit test for see sentence in Google and Numpy style docstring", {"tags": ["NN", "NN", "IN", "VB", "NN", "IN", "NNP", "CC", "JJ", "NN", "NN"]}], ["unit test for wrong names of function params in Google and numpy style docstrings", {"tags": ["NN", "NN", "IN", "JJ", "NNS", "IN", "NN", "NNS", "IN", "NNP", "CC", "JJ", "NN", "NNS"]}], ["unit tests for correctly documented parameters and return values (all 3 styles)", {"tags": ["NN", "VBZ", "IN", "RB", "VBN", "NNS", "CC", "NN", "NNS", "-LRB-", "DT", "CD", "NNS", "-RRB-"]}], ["unit tests for Google and Numpy style in class methods", {"tags": ["NN", "VBZ", "IN", "NNP", "CC", "JJ", "NN", "IN", "NN", "NNS"]}], ["unit test for Numpy style parameter documentation; improvements of other unit tests", {"tags": ["NN", "NN", "IN", "JJ", "NN", "NN", "NN", ":", "NNS", "IN", "JJ", "NN", "VBZ"]}], ["documentation", {"tags": ["NN"]}], ["check_docs: Emit error messages only when it detects that at least one :param: definition is found? In that case, we will actually know that the user intended to use Sphinx style documentation or not.", {"tags": ["NN", ":", "NN", "NN", "NNS", "RB", "WRB", "PRP", "VBZ", "IN", "RB", "JJS", "CD", ":", "NN", ":", "NN", "VBZ", "VBN", ".", "IN", "DT", "NN", ",", "PRP", "MD", "RB", "VB", "IN", "DT", "NN", "VBN", "TO", "VB", "JJ", "NN", "NN", "CC", "RB", "."]}], ["Fix issue #223 (ignored_modules should apply to import errors too). The fix will ignore import errors caused by attempting to import any name which is or is a subpackage of a module listed in ignored_modules.", {"tags": ["NN", "VB", "$", "CD", "-LRB-", "NNS", "MD", "VB", "TO", "VB", "NNS", "RB", "-RRB-", ".", "DT", "NN", "MD", "VB", "NN", "NNS", "VBN", "IN", "VBG", "TO", "VB", "DT", "NN", "WDT", "VBZ", "CC", "VBZ", "DT", "NN", "IN", "DT", "NN", "VBN", "IN", "NNS", "."]}], ["Lookup in the implicit metaclass when checking for no-member.\n\nIf the class in question has an implicit metaclass, which is\nTrue for new style classes, then we can look into in when we are doing\na dot access on it. Closes issue #438.", {"tags": ["NN", "IN", "DT", "JJ", "NN", "WRB", "VBG", "IN", "DT", "HYPH", "NN", ".", "_SP", "IN", "DT", "NN", "IN", "NN", "VBZ", "DT", "JJ", "NN", ",", "WDT", "VBZ", "_SP", "JJ", "IN", "JJ", "NN", "NNS", ",", "RB", "PRP", "MD", "VB", "IN", "IN", "WRB", "PRP", "VBP", "VBG", "_SP", "DT", "NN", "NN", "IN", "PRP", ".", "NNS", "NN", "$", "CD", "."]}], ["Document why _emit_no_member can't be used before the actual .getattr call.", {"tags": ["NN", "WRB", "NNP", "NNP", "MD", "RB", "VB", "VBN", "IN", "DT", "JJ", "NN", "NN", "."]}], ["Refactor common code for ignoring no-member for a owner in a particular function.", {"tags": ["NN", "JJ", "NN", "IN", "VBG", "DT", "HYPH", "NN", "IN", "DT", "NN", "IN", "DT", "JJ", "NN", "."]}], ["issue-422 solved some pylint warnings when running pylint on pylint code base", {"tags": ["NN", "VBD", "DT", "NN", "NNS", "WRB", "VBG", "NN", "IN", "NN", "NN", "NN"]}], ["Revert", {"tags": ["NN"]}], ["Support for combining the Python 3 checker mode with the --jobs flag.\n\nThis patch makes sure that --py3k and --jobs flags can be combined together.\nIt introduces a new method in lint.PyLinter, called set_python3_porting_mode,\nwhich will setup a new flag inside the linter, passed down to child linters\nwhen they are created. Closes issue #467.", {"tags": ["NN", "IN", "VBG", "DT", "NNP", "CD", "NN", "NN", "IN", "DT", "NNP", "NN", ".", "_SP", "DT", "NN", "VBZ", "JJ", "IN", "JJR", "CC", "JJ", "NNS", "MD", "VB", "VBN", "RB", ".", "_SP", "PRP", "VBZ", "DT", "JJ", "NN", "IN", "NN", ".", "NNP", ",", "VBD", "NN", ",", "_SP", "WDT", "MD", "VB", "DT", "JJ", "NN", "IN", "DT", "NN", ",", "VBD", "RP", "IN", "NN", "NNS", "_SP", "WRB", "PRP", "VBP", "VBN", ".", "NNS", "VBP", "$", "CD", "."]}], ["Refactor iterable tests", {"tags": ["NN", "JJ", "NNS"]}], ["Suppress ResolveErrors from Class.mro in unimplemented_abstract_methods.", {"tags": ["NN", "NNP", "IN", "NNP", "IN", "NNP", "."]}], ["Cleanup lint.py.\n\nImport modules, instead of objects from them, used only once. Trim a couple\nof long lines, remove a couple of unused variables and so on.", {"tags": ["NN", "ADD", ".", "_SP", "NN", "VBZ", ",", "RB", "IN", "NNS", "IN", "PRP", ",", "VBN", "RB", "RB", ".", "VB", "DT", "NN", "_SP", "IN", "JJ", "NNS", ",", "VB", "DT", "NN", "IN", "JJ", "NNS", "CC", "RB", "RB", "."]}], ["FAQ typo fix (\"minimum\" vs \"maximum\")\n\n--HG--\nbranch : fahhem/faq-typo-fix-minimum-vs-maximum-1418754998842", {"tags": ["NN", "NN", "NN", "-LRB-", "``", "JJ", "''", "IN", "``", "JJ", "''", "-RRB-", "_SP", "NFP", "_SP", "NN", ":", "NNP", "SYM", "NN", "HYPH", "NN", "HYPH", "NN", "HYPH", "NN", "HYPH", "IN", "HYPH", "NN"]}], ["Fix tests to work with the new astroid release.", {"tags": ["NN", "NNS", "TO", "VB", "IN", "DT", "JJ", "NN", "NN", "."]}], ["Test redundant unittest assert\n\n--HG--\nbranch : redundant-assert", {"tags": ["NN", "NN", "JJ", "NN", "_SP", "NFP", "_SP", "NN", ":", "NN", "HYPH", "NN"]}], ["pylint pylint", {"tags": ["NN", "NN"]}], ["Cleanup through documentation.", {"tags": ["NN", "IN", "NN", "."]}], ["Documentation improvements\n\n- added intros to features page,\n- fixed PyLint to Pylint in text,\n- improved ide-integration doc page,\n- updated pylintrc in examples and\n- regenerated pylint manual\n\n--HG--\nbranch : docs-improvements-2", {"tags": ["NN", "NNS", "_SP", "HYPH", "VBN", "NNP", "IN", "VBZ", "NN", ",", "_SP", "HYPH", "VBN", "NNP", "IN", "NN", "IN", "NN", ",", "_SP", "HYPH", "VBN", "NN", "HYPH", "NN", "NN", "NN", ",", "_SP", "HYPH", "VBN", "NN", "IN", "NNS", "CC", "_SP", "HYPH", "JJ", "NN", "NN", "_SP", "NFP", "_SP", "NN", ":", "NN", "HYPH", "NN"]}], ["Refactor code out into a _check_dict_node function.", {"tags": ["NN", "NN", "RP", "IN", "DT", "NN", "NN", "NN", "."]}], ["Address PR comments", {"tags": ["NN", "NN", "NNS"]}], ["Merge branches.", {"tags": ["NN", "NNS", "."]}], ["Wrap dict.items() et. al. in list()\n\n--HG--\nbranch : python_6", {"tags": ["NN", "NNS", "-LRB-", "-RRB-", "NN", ".", "NNP", ".", "IN", "NN", "-LRB-", "-RRB-", "_SP", "NFP", "_SP", "NN", ":", "NNS"]}], ["Code review update: return False instead of using assert.", {"tags": ["NN", "NN", "NN", ":", "VB", "JJ", "RB", "IN", "VBG", "NN", "."]}], ["Emit warning for .format() interpolation within logging function calls.", {"tags": ["NN", "VBG", "IN", ".", "-LRB-", "-RRB-", "NN", "IN", "VBG", "NN", "VBZ", "."]}], ["Revert change.", {"tags": ["NN", "NN", "."]}], ["Cleanup.", {"tags": ["NN", "."]}], ["Cleanup.", {"tags": ["NN", "."]}], ["Cleanup.", {"tags": ["NN", "."]}], ["changelog entry for the new extensions module and the new checker 'check_docs'", {"tags": ["NN", "NN", "IN", "DT", "JJ", "NNS", "NN", "CC", "DT", "JJ", "NN", "``", "NNP", "''"]}], ["check_docs: shorter name for method", {"tags": ["NN", ":", "JJR", "NN", "IN", "NN"]}], ["support for Sphinx type declarations like\n    :param int mgid:", {"tags": ["NN", "IN", "NNP", "NN", "NNS", "IN", "_SP", ":", "NN", "NN", "NN", ":"]}], ["Fix for wired case with import from stmt.\n\n--HG--\nbranch : fix-293", {"tags": ["NN", "IN", "JJ", "NN", "IN", "NN", "IN", "NN", ".", "_SP", "NFP", "_SP", "NN", ":", "."]}], ["Review fixes.\n\n--HG--\nbranch : fix-293", {"tags": ["NN", "NNS", ".", "_SP", "NFP", "_SP", "NN", ":", "."]}], ["Remove testcases only for Python < 2.7.", {"tags": ["NN", "VBZ", "RB", "IN", "NNP", "XX", "CD", "."]}], ["documentation about how to activate the new checker\n  pylint.extensions.check_docs", {"tags": ["NN", "IN", "WRB", "TO", "VB", "DT", "JJ", "NN", "_SP", "NN"]}], ["Review fixes - added comment.\n\n--HG--\nbranch : spelling-checker", {"tags": ["NN", "NNS", "HYPH", "VBN", "NN", ".", "_SP", "NFP", "_SP", "NN", ":", "NN", "HYPH", "NN"]}], ["Bump version.", {"tags": ["NN", "NN", "."]}], ["backout of  85a5e49", {"tags": ["NN", "IN", "_SP", "CD"]}], ["Porting tests over to the new framework.", {"tags": ["NN", "NNS", "RP", "IN", "DT", "JJ", "NN", "."]}], ["Order of reporting is consistent.", {"tags": ["NN", "IN", "NN", "VBZ", "JJ", "."]}], ["Debug.", {"tags": ["NN", "."]}], ["Emit 'catching-non-exception' for non-class nodes. Closes issue #303.", {"tags": ["NN", "''", "VBG", "HYPH", "JJ", "JJ", "JJ", "''", "IN", "JJ", "JJ", "JJ", "NNS", ".", "NNS", "NN", "$", "CD", "."]}], ["Revert change from 3b748b4: emit old-style-classes only for classes without bases and without explicitly defined metaclasses.", {"tags": ["NN", "NN", "IN", "CD", ":", "VB", "JJ", "HYPH", "NN", "HYPH", "NNS", "RB", "IN", "NNS", "IN", "NNS", "CC", "IN", "RB", "VBN", "NNS", "."]}], ["fix issue #203, we should not let ImportError propagate from the import checker", {"tags": ["NN", "VB", "$", "CD", ",", "PRP", "MD", "RB", "VB", "NNP", "VB", "IN", "DT", "NN", "NN"]}], ["import modutils from astroid, it has been backported there", {"tags": ["NN", "NNS", "IN", "NNP", ",", "PRP", "VBZ", "VBN", "VBN", "RB"]}], ["Definition order is considered for classes, function arguments and annotations. Closes issue #257.", {"tags": ["NN", "NN", "VBZ", "VBN", "IN", "NNS", ",", "NN", "NNS", "CC", "NNS", ".", "NNS", "VBP", "$", "CD", "."]}], ["Skip sequence index checks on types that do not resolve to an Instance or a\nClass.\n\nThis avoids a crash on types that do not implement getattr, such as\nUnboundMethod.\n\n--HG--\nbranch : list-index-checker", {"tags": ["NN", "NN", "NN", "NNS", "IN", "NNS", "WDT", "VBP", "RB", "VB", "IN", "DT", "NN", "CC", "DT", "_SP", "NN", ".", "_SP", "DT", "VBZ", "DT", "NN", "IN", "NNS", "WDT", "VBP", "RB", "VB", "NN", ",", "JJ", "IN", "_SP", "NNP", ".", "_SP", "NFP", "_SP", "NN", ":", "NN", "HYPH", "NN", "HYPH", "NN"]}], ["Add tests for list index type checking and clean up the conditional\n\n--HG--\nbranch : list-index-checker", {"tags": ["NN", "NNS", "IN", "NN", "NN", "NN", "VBG", "CC", "VB", "RP", "DT", "JJ", "_SP", "NFP", "_SP", "NN", ":", "NN", "HYPH", "NN", "HYPH", "NN"]}], ["Emit 'not-callable' when calling properties. Closes issue #268.", {"tags": ["NN", "''", "RB", "HYPH", "JJ", "''", "WRB", "VBG", "NNS", ".", "NNS", "NN", "$", "CD", "."]}], ["Emit attribute-defined-outside-init for all cases, not just for the last assignment. Closes issue #262.", {"tags": ["NN", "NN", "HYPH", "VBN", "HYPH", "NN", "HYPH", "NN", "IN", "DT", "NNS", ",", "RB", "RB", "IN", "DT", "JJ", "NN", ".", "NNS", "VBP", "$", "CD", "."]}], ["Skip nodes with starargs or kwargs for now.\n\n--HG--\nbranch : format", {"tags": ["NN", "NNS", "IN", "NNS", "CC", "NNS", "IN", "RB", ".", "_SP", "NFP", "_SP", "NN", ":", "NN"]}], ["Emit 'undefined-variable' for undefined names used as metaclasses with Python 3 `metaclass=` syntax.\n\n--HG--\nbranch : metaclass_undefined", {"tags": ["NN", "``", "JJ", "HYPH", "NN", "''", "IN", "JJ", "NNS", "VBN", "IN", "NNS", "IN", "NNP", "CD", "NN", "NN", "''", "NN", ".", "_SP", "NFP", "_SP", "NN", ":", "VBN"]}], ["pylint 1.1", {"tags": ["NN", "CD"]}], ["Fix tests for < Python 2.7.", {"tags": ["NN", "NNS", "IN", "XX", "NNP", "CD", "."]}], ["epylint must use a msg-template that includes the message id, as that is what is used to determine if it is an Error or Warning", {"tags": ["NN", "MD", "VB", "DT", "NN", "HYPH", "NN", "WDT", "VBZ", "DT", "NN", "PRP", "VBD", ",", "IN", "DT", "VBZ", "WP", "VBZ", "VBN", "TO", "VB", "IN", "PRP", "VBZ", "DT", "NN", "CC", "NN"]}], ["cleanup as suggested by Buck Golemon", {"tags": ["NN", "IN", "VBN", "IN", "NNP", "NNP"]}], ["code commented and import moved so it won't run when python>2.5", {"tags": ["NN", "VBN", "CC", "NN", "VBD", "IN", "PRP", "MD", "RB", "VB", "WRB", "NNS"]}], ["Tidy of html classes", {"tags": ["NN", "IN", "NN", "NNS"]}], ["Fix tests for handling the fact that all style are newstyle classes in Python 3.", {"tags": ["NN", "NNS", "IN", "VBG", "DT", "NN", "IN", "DT", "NN", "VBP", "VBN", "NNS", "IN", "NNP", "CD", "."]}], ["Refactor checks by infering first the cause of the exception.\n\n--HG--\nbranch : exception_context", {"tags": ["NN", "NNS", "IN", "VBG", "RB", "DT", "NN", "IN", "DT", "NN", ".", "_SP", "NFP", "_SP", "NN", ":", "ADD"]}], ["Fix failed merge.\n\n--HG--\nbranch : exception_context", {"tags": ["NN", "VBD", "NN", ".", "_SP", "NFP", "_SP", "NN", ":", "ADD"]}], ["Merge branches.\n\n--HG--\nbranch : reversed", {"tags": ["NN", "NNS", ".", "_SP", "NFP", "_SP", "NN", ":", "JJ"]}], ["Fix builtin module name for Python 3.", {"tags": ["NN", "VB", "JJ", "NN", "IN", "NNP", "CD", "."]}], ["fix tests broken due to Windows line ending or by output format change introduced in ed904ee30bc5", {"tags": ["NN", "NNS", "VBN", "IN", "IN", "NNP", "NN", "VBG", "CC", "IN", "NN", "NN", "NN", "VBN", "IN", "ADD"]}], ["cleanup unittest_reporting", {"tags": ["NN", "VBG"]}], ["Add tests for Python 3 string format checker.\n\n--HG--\nbranch : format", {"tags": ["NN", "NNS", "IN", "NNP", "CD", "NN", "NN", "NN", ".", "_SP", "NFP", "_SP", "NN", ":", "NN"]}], ["Bug fix.\n\n--HG--\nbranch : format", {"tags": ["NN", "NN", ".", "_SP", "NFP", "_SP", "NN", ":", "NN"]}], ["Fix tests eols.\n\n--HG--\nbranch : iter", {"tags": ["NN", "NNS", "NNS", ".", "_SP", "NFP", "_SP", "NN", ":", "RB"]}], ["Update tests for showing the module name for both unpacking-non-sequence and unbalanced-tuple-unpacking.\n\n--HG--\nbranch : non_unpackable", {"tags": ["NN", "NNS", "IN", "VBG", "DT", "JJ", "NN", "IN", "CC", "JJ", "HYPH", "JJ", "JJ", "JJ", "CC", "JJ", "HYPH", "NN", "HYPH", "NN", ".", "_SP", "NFP", "_SP", "NN", ":", "JJ"]}], ["Merge branches.\n\n--HG--\nbranch : iter", {"tags": ["NN", "NNS", ".", "_SP", "NFP", "_SP", "NN", ":", "RB"]}], ["Packaging fixes:\n\n* update version string for docs\n* doc's conf.py was missing in sdist", {"tags": ["NN", "NNS", ":", "_SP", "NFP", "NN", "NN", "NN", "IN", "NNS", "_SP", "NFP", "NN", "POS", "NN", "VBD", "VBG", "IN", "NN"]}], ["Fix issue #55 (false-positive trailing-whitespace on Windows)", {"tags": ["NN", "VB", "$", "CD", "-LRB-", "JJ", "HYPH", "JJ", "NN", "HYPH", "NN", "IN", "NNP", "-RRB-"]}], ["rename test so it is started with python2.6 as well as python 2.7", {"tags": ["NN", "NN", "CC", "PRP", "VBZ", "VBN", "IN", "NNP", "RB", "RB", "IN", "NNP", "CD"]}], ["Emit warnings about lines exceeding the column limit when those lines are inside multiline docstrings.", {"tags": ["NN", "NNS", "IN", "NNS", "VBG", "DT", "NN", "NN", "WRB", "DT", "NNS", "VBP", "IN", "NN", "NNS", "."]}], ["Cleanup.", {"tags": ["NN", "."]}], ["Update tests and changelog.", {"tags": ["NN", "NNS", "CC", "NN", "."]}], ["Rename func_w0133 (a warning that does not exist any more) to func_name_checking.", {"tags": ["NN", "CD", "-LRB-", "DT", "NN", "WDT", "VBZ", "RB", "VB", "DT", "JJR", "-RRB-", "IN", "NN", "."]}], ["test: make errors from test_errors_only more understandable\n\n\"True is not False\" considered unhelpful.", {"tags": ["NN", ":", "VB", "NNS", "IN", "RB", "RBR", "JJ", "_SP", "``", "JJ", "VBZ", "RB", "JJ", "''", "VBN", "JJ", "."]}], ["python3: deal with astroid's module.file_stream returning bytes\n\nUse tokenize.tokenize() which wants a byte stream.  Everywhere else,\ndecode as necessary.", {"tags": ["NN", ":", "VB", "IN", "NNP", "POS", "NN", "NN", "NNS", "_SP", "VBP", "NN", "-LRB-", "-RRB-", "WDT", "VBZ", "DT", "NN", "NN", ".", "_SP", "RB", "RB", ",", "_SP", "NN", "RB", "JJ", "."]}], ["test: python3-specific output for func_newstyle_exceptions\n\nThere's no \"raise Exception, args\" syntax anymore.", {"tags": ["NN", ":", "JJ", "NN", "IN", "NNS", "_SP", "EX", "VBZ", "DT", "``", "VB", "NN", ",", "NNS", "``", "NN", "RB", "."]}], ["test: add python3 versions for some outputs\n\n- rewriting print 'foo' into print('foo') changes line length\n- unicode/str becomes str/bytes\n- __builtin__ becomes builtins\n- 2to3 rewrites 'import syntax_error' into 'from . import syntax_error',\n  which changes pylint's output", {"tags": ["NN", ":", "VB", "NN", "NNS", "IN", "DT", "NNS", "_SP", "HYPH", "VBG", "NN", "``", "NN", "''", "IN", "NN", "''", "-RRB-", "VBZ", "NN", "NN", "_SP", "HYPH", "NNP", "SYM", "NN", "VBZ", "NN", "SYM", "VBZ", "_SP", "HYPH", "NNP", "NNP", "NN", "NNP", "NNP", "VBZ", "VBZ", "_SP", "HYPH", "CD", "NNS", "POS", "NN", "NN", "''", "IN", "''", "IN", ".", "NN", "NNP", "''", ",", "_SP", "WDT", "VBZ", "NN", "POS", "NN"]}], ["test: split w0623 tests in python2 and python3 versions\n\npython2 uses except foo, bar\npython3 uses except foo as bar\n\nMixing those is messy, so give up and make two separate versions.", {"tags": ["NN", ":", "VB", "CD", "VBZ", "IN", "NN", "CC", "NN", "NNS", "_SP", "NN", "NNS", "IN", "NN", ",", "NN", "_SP", "NN", "NNS", "IN", "NN", "IN", "NN", "_SP", "VBG", "DT", "VBZ", "JJ", ",", "RB", "VB", "RP", "CC", "VB", "CD", "JJ", "NNS", "."]}], ["test: split func_excess_escapes\n\nPart of it is spethial in python3 (2to3 doesn't convert byte strings to\nbyte strings)", {"tags": ["NN", ":", "VB", "NNS", "_SP", "NN", "IN", "PRP", "VBZ", "JJ", "IN", "NN", "-LRB-", "CD", "VBZ", "RB", "VB", "NN", "NNS", "IN", "_SP", "NN", "NNS", "-RRB-"]}], ["python3 compat for check about dangerous default arguments\n\nThe __builtin__ module was renamed as builtins.", {"tags": ["NN", "NNP", "IN", "NN", "IN", "JJ", "NN", "NNS", "_SP", "DT", "NNP", "NNP", "NN", "NNP", "NNP", "NN", "VBD", "VBN", "IN", "NNS", "."]}], ["test: fix LintTestNonExistentModuleTC for python 3.3\n\nThey changed the error message format.", {"tags": ["NN", ":", "VB", "NNP", "IN", "NNP", "CD", "_SP", "PRP", "VBD", "DT", "NN", "NN", "NN", "."]}], ["test/utils: use codecs.open instead of plain open for python3 compat\n\nWe don't really care about the encoding here, just want something that\nwon't explode on non-ascii.", {"tags": ["NN", "SYM", "NNS", ":", "VB", "NN", "RB", "IN", "RB", "JJ", "IN", "NN", "NN", "_SP", "PRP", "VBP", "RB", "RB", "VB", "IN", "DT", "NN", "RB", ",", "RB", "VB", "NN", "WDT", "_SP", "MD", "RB", "VB", "IN", "JJ", "JJ", "JJ", "."]}], ["Refactor PyLintASTWalker to allow using symbolic names in check_messages as well.", {"tags": ["NN", "NN", "TO", "VB", "VBG", "JJ", "NNS", "IN", "NNP", "RB", "RB", "."]}], ["Add @check_messages(...) annotations to help not to spend time on unneeded checks.\n\nWe only add such annotations is reasonably simple cases.\nSome visit methods are quite involved and build a checker's state ;\nsuch methods are skipped in the first phase.", {"tags": ["NN", "NNS", "-LRB-", "NFP", "-RRB-", "NNS", "TO", "VB", "RB", "TO", "VB", "NN", "IN", "JJ", "NNS", ".", "_SP", "PRP", "RB", "VBP", "JJ", "NNS", "VBZ", "RB", "JJ", "NNS", ".", "_SP", "DT", "NN", "NNS", "VBP", "RB", "JJ", "CC", "VB", "DT", "NN", "POS", "NN", ":", "_SP", "JJ", "NNS", "VBP", "VBN", "IN", "DT", "JJ", "NN", "."]}], ["astng has been renamed astroid", {"tags": ["NN", "VBZ", "VBN", "VBN", "NNP"]}], ["pylint home page is www.pylint.org / ftp is dead", {"tags": ["NN", "NN", "NN", "VBZ", "NNP", "SYM", "NNP", "VBZ", "JJ"]}], ["documentation typos, spotted by afayolle", {"tags": ["NN", "NNP", ",", "VBN", "IN", "NN"]}], ["string check: don't warn about octal escape sequence, warn about \\o (not octal in python). Closes #111799", {"tags": ["NN", "NN", ":", "VB", "RB", "VB", "IN", "JJ", "NN", "NN", ",", "VB", "RB", "NN", "-LRB-", "RB", "JJ", "IN", "NNP", "-RRB-", ".", "NNS", "$", "CD"]}], ["backport stable", {"tags": ["NN", "NN"]}], ["backport stable", {"tags": ["NN", "NN"]}], ["pylint-gui: Bind F5 to the run button. Closes #110839\n\n--HG--\nbranch : stable", {"tags": ["NN", "HYPH", "NN", ":", "NNP", "NN", "IN", "DT", "NN", "NN", ".", "NNS", "$", "CD", "_SP", "NFP", "_SP", "NN", ":", "JJ"]}], ["lint fixes", {"tags": ["NN", "NNS"]}], ["pylint fixes", {"tags": ["NN", "VBZ"]}], ["Refactor test_func in order to extract common part for reutilization in pylint-brain", {"tags": ["NN", "NN", "IN", "NN", "TO", "VB", "JJ", "NN", "IN", "NN", "IN", "NN", "HYPH", "NN"]}], ["Fix tests which failed on tempfile file comparaison due to Mac OS X which make /tmp a symlink to /private/tmp", {"tags": ["NN", "NNS", "WDT", "VBD", "IN", "JJ", "NN", "NN", "JJ", "IN", "NNP", "NNP", "NN", "WDT", "VBP", "CD", "DT", "NN", "IN", ".", "SYM", "NN"]}], ["epylint: ensure it uses the same python/pylint version. Closes #87024\n\nalso, drop usage of sub-shell on the way.", {"tags": ["NN", ":", "VB", "PRP", "VBZ", "DT", "JJ", "NN", "SYM", "NN", "NN", ".", "NNS", "$", "CD", "_SP", "RB", ",", "VB", "NN", "IN", "NN", "NN", "NN", "IN", "DT", "NN", "."]}], ["test for #70381: IndendationError in import causes crash", {"tags": ["NN", "IN", "$", "CD", ":", "NNP", "IN", "NN", "VBZ", "NN"]}], ["py3k: fix test_import_graph.py to make it also runnable from pytest", {"tags": ["NN", ":", "NN", "NNS", "TO", "VB", "PRP", "RB", "JJ", "IN", "JJS"]}], ["typo; fix py3k tests", {"tags": ["NN", ":", "NN", "NNP", "NNS"]}], ["print exceptions not handled by astng", {"tags": ["NN", "NNS", "RB", "VBN", "IN", "NN"]}], ["test: fix test for check_line API modification", {"tags": ["NN", ":", "VB", "NN", "IN", "NNP", "NN", "NN"]}], ["performance: remove strange unused F0321 check, hence disabling the format checker\nwhen using \"-E\" or \"-d W,C\" option", {"tags": ["NN", ":", "VB", "JJ", "JJ", "NN", "NN", ",", "RB", "VBG", "DT", "NN", "NN", "_SP", "WRB", "VBG", "``", ":", "''", "CC", "``", ":", "NNP", ",", "NN", "''", "NN"]}], ["fix: test shall also pass for python2.5 were int have no \"real\" attribute", {"tags": ["NN", ":", "NN", "MD", "RB", "VB", "IN", "CD", "VBD", "NN", "VBP", "DT", "``", "JJ", "''", "NN"]}], ["performance: use 'active_msgs' attribute to disable function calls or the like", {"tags": ["NN", ":", "VB", "``", "NNP", "POS", "NN", "TO", "JJ", "NN", "NNS", "CC", "DT", "JJ"]}], ["pylint itself: remove last pylint error message", {"tags": ["NN", "PRP", ":", "VB", "JJ", "NN", "NN", "NN"]}], ["cleanup: refactor checker/import methods that were marked for rewriting", {"tags": ["NN", ":", "NN", "NN", "SYM", "NN", "NNS", "WDT", "VBD", "VBN", "IN", "VBG"]}], ["test: fix tests, test some more message and report disabling", {"tags": ["NN", ":", "NN", "NNS", ",", "VB", "DT", "JJR", "NN", "CC", "NN", "VBG"]}], ["cleanup / test: rename a method and move some stuff around for easier testing", {"tags": ["NN", "SYM", "NN", ":", "VB", "DT", "NN", "CC", "VB", "DT", "NN", "IN", "IN", "JJR", "NN"]}], ["test format: bring some ancient tests back to live\n\n- remove tests referring to noexistent W0321 warning\n- add a skip message for test_no_crash waiting to know what it should do", {"tags": ["NN", "NN", ":", "VB", "DT", "JJ", "NNS", "RB", "TO", "VB", "_SP", ",", "VB", "NNS", "VBG", "IN", "NN", "NN", "VBG", "_SP", "HYPH", "VB", "DT", "NN", "NN", "IN", "NNP", "VBG", "TO", "VB", "WP", "PRP", "MD", "VB"]}], ["cleanup:  remove useless KeyboardInterrupt catch and have a print for\nunhandled exception", {"tags": ["NN", ":", "_SP", "VB", "JJ", "NNP", "NN", "CC", "VB", "DT", "NN", "IN", "_SP", "JJ", "NN"]}], ["performance: make sure checkers are not called because of reporters\n\n- disable all reporters with the \"--reports=n\" option\n- fix bug in checking if the reporter is activated\n- hence also desactivating similar with '-E' (which was not before)", {"tags": ["NN", ":", "VB", "JJ", "NNS", "VBP", "RB", "VBN", "IN", "IN", "NNS", "_SP", ":", "VB", "DT", "NNS", "IN", "DT", "``", "NNS", "SYM", "CC", "``", "NN", "_SP", "HYPH", "NN", "NN", "IN", "VBG", "IN", "DT", "NN", "VBZ", "VBN", "_SP", ":", "RB", "RB", "VBG", "JJ", "IN", "``", "ADD", "''", "-LRB-", "WDT", "VBD", "RB", "RB", "-RRB-"]}], ["cleanup: remove unused needs_checkers attribut and sort_checkers method\nwhat was expected to be accomplished needs_checkers will be done\neasier with a decorator", {"tags": ["NN", ":", "VB", "JJ", "NNPS", "CC", "CC", "NNPS", "NN", "_SP", "WP", "VBD", "VBN", "TO", "VB", "VBN", "NNPS", "MD", "VB", "VBN", "_SP", "JJR", "IN", "DT", "NN"]}], ["import of checkers: little more information on checker import failure\n\nremove exec mode of checkers/base.py", {"tags": ["NN", "IN", "NNS", ":", "JJ", "JJR", "NN", "IN", "NN", "NN", "NN", "_SP", "VB", "NN", "NN", "IN", "NNS", "SYM", "ADD"]}], ["cleanup: simplify add_checker", {"tags": ["NN", ":", "VB", "JJR"]}], ["cleanup: we don't support 2.3 anymore", {"tags": ["NN", ":", "PRP", "VBP", "RB", "VB", "CD", "RB"]}], ["config: kill some text in environment section of the man page", {"tags": ["NN", ":", "VB", "DT", "NN", "IN", "NN", "NN", "IN", "DT", "NN", "NN"]}], ["py3k: fix smoketest", {"tags": ["NN", ":", "VB", "JJ"]}], ["typo: fixes erratic test_similar behavior", {"tags": ["NN", ":", "NNS", "JJ", "JJ", "NN"]}], ["cleanup: remove KeyboardInterrupt capture: it goes through Exception in py >= 2.5\n\nKeyboardInterrupt is no more a subclass of Exception anymore", {"tags": ["NN", ":", "VB", "NNP", "NN", ":", "PRP", "VBZ", "IN", "NN", "IN", "NNP", "XX", "SYM", "CD", "_SP", "NNP", "VBZ", "DT", "JJR", "DT", "NN", "IN", "NN", "RB"]}], ["FAQ : fix link", {"tags": ["NN", ":", "NN", "NN"]}], ["test: forgot missing py3k message", {"tags": ["NN", ":", "VBN", "VBG", "NNP", "NN"]}], ["test_func: error message improvement", {"tags": ["NN", ":", "NN", "NN", "NN"]}], ["py3k: test corrections\n\n* no more relative imports\n* py3k: replace file by open\n* a special input for stuff / problems removed in 3.x", {"tags": ["NN", ":", "NN", "NNS", "_SP", "NFP", "DT", "RBR", "JJ", "NNS", "_SP", "NFP", "NN", ":", "VB", "NN", "IN", "JJ", "_SP", "NFP", "DT", "JJ", "NN", "IN", "NN", "SYM", "NNS", "VBN", "IN", "CD"]}], ["cleanup; don't need to talk about  python >= 2.5 anymore", {"tags": ["NN", ":", "VB", "RB", "VB", "TO", "VB", "IN", "_SP", "NNP", "NNP", "SYM", "CD", "RB"]}], ["cleanup: remove python < 2.5 support", {"tags": ["NN", ":", "VB", "NNP", "XX", "CD", "NN"]}], ["cleanup: norm_open can be done directly", {"tags": ["NN", ":", "NNP", "MD", "VB", "VBN", "RB"]}], ["fix: raise NotImplemented with a callfunc is also bad", {"tags": ["NN", ":", "VB", "NN", "IN", "DT", "NN", "VBZ", "RB", "JJ"]}], ["packaging : add py3k target; update setup.py and other files to make py3k packaging work", {"tags": ["NN", ":", "VB", "NNP", "NN", ":", "VB", "NNS", "CC", "JJ", "NNS", "TO", "VB", "NNP", "VBG", "NN"]}], ["typo", {"tags": ["NN"]}], ["test: add a test for encoding crash", {"tags": ["NN", ":", "VB", "DT", "NN", "IN", "VBG", "NN"]}], ["cleanup: we don't support python 2.2 anymore", {"tags": ["NN", ":", "PRP", "VBP", "RB", "VB", "NNP", "CD", "RB"]}], ["cleanup; remove a useless \"else\" indentation", {"tags": ["NN", ":", "VB", "DT", "JJ", "``", "RB", "''", "NN"]}], ["test: make tests independent of current working directory", {"tags": ["NN", ":", "VB", "NNS", "JJ", "IN", "JJ", "VBG", "NN"]}], ["py3k: fix __builtin__ vs builtins", {"tags": ["NN", ":", "VB", "NNP", "NNP", "NN", "NNP", "NNP", "IN", "NNS"]}], ["example: updated  examples/pylintrc by using --generate-rcfile", {"tags": ["NN", ":", "VBN", "_SP", "NNS", "SYM", "NN", "IN", "VBG", "NN", "HYPH", "NN"]}], ["typo", {"tags": ["NN"]}], ["debian: permit symlink creation by get-orig-source target in debian/rules\n\nThis behaviour is expected by dpkg-source utility.\nLgp will check Debian orig.tar.gz names only for now.", {"tags": ["NN", ":", "VB", "NN", "NN", "IN", "NN", "HYPH", "NN", "HYPH", "NN", "NN", "IN", "NN", "SYM", "NNS", "_SP", "DT", "NN", "VBZ", "VBN", "IN", "NN", "HYPH", "NN", "NN", ".", "_SP", "NNP", "MD", "VB", "NNP", ",", "NNS", "RB", "IN", "RB", "."]}], ["debian: can now retrieve pristine tarball thanks to optional get-orig-source target", {"tags": ["NN", ":", "MD", "RB", "VB", "JJ", "NN", "NNS", "IN", "JJ", "NN", "HYPH", "NN", "HYPH", "NN", "NN"]}], ["lint fixes", {"tags": ["NN", "NNS"]}], ["cleanup", {"tags": ["NN"]}], ["pyreverse: take into account class attributes which are stored in locals_type", {"tags": ["NN", ":", "VB", "IN", "NN", "NN", "NNS", "WDT", "VBP", "VBN", "IN", "NNP"]}], ["cleanup", {"tags": ["NN"]}], ["cleanup, d-t-w, fix remaining [en|dis] method call", {"tags": ["NN", ",", "NNP", "HYPH", "NNP", "HYPH", "NN", ",", "NN", "VBG", "-LRB-", "NNP", "-RRB-", "NN", "NN"]}], ["record ordered checkers for later call to close", {"tags": ["NN", "VBD", "NNS", "IN", "RB", "NN", "TO", "VB"]}], ["refactor messages and checker handling\n\n* new ast walker, built at registration time\n\n* properly handle dependencies between checkers instead of\n  priority based order\n\n* only run checker necessary according to activated message\n\n* much more simple command line: [en|dis]able-msg,\n  [en|dis]able-msg-cat and [en|dis]able-report superseeded\n  by [en|dis]able options\n\n-> we should split current checkers into simpler checker with the\nsame name, and proper dependencies when needed", {"tags": ["NN", "NNS", "CC", "NN", "VBG", "_SP", "NFP", "JJ", "NN", "NN", ",", "VBN", "IN", "NN", "NN", "_SP", "NFP", "RB", "VB", "NNS", "IN", "NNS", "RB", "IN", "_SP", "NN", "VBN", "NN", "_SP", "NFP", "RB", "VB", "NN", "JJ", "VBG", "IN", "VBN", "NN", "_SP", "NFP", "RB", "RBR", "JJ", "NN", "NN", ":", "-LRB-", "JJ", "HYPH", "NN", ",", "_SP", "-LRB-", "JJ", "HYPH", "NN", "HYPH", "NN", "CC", "-LRB-", "JJ", "HYPH", "NN", "VBD", "_SP", "IN", "-LRB-", "JJ", "NNS", "_SP", ":", "XX", "PRP", "MD", "VB", "JJ", "NNS", "IN", "JJR", "NN", "IN", "DT", "_SP", "JJ", "NN", ",", "CC", "JJ", "NNS", "WRB", "VBN"]}], ["Changelog :add #5561: checker for function arguments", {"tags": ["NN", ":", "VB", "$", "CD", ":", "NN", "IN", "NN", "NNS"]}], ["packaging fixes", {"tags": ["NN", "NNS"]}], ["auto-tag for input file", {"tags": ["NN", "HYPH", "NN", "IN", "NN", "NN"]}], ["tag smoke test", {"tags": ["NN", "NN", "NN"]}], ["test fixes to consider fixed typos", {"tags": ["NN", "NNS", "TO", "VB", "VBN", "NNS"]}], ["Bugfix: correct grammar/spelling of messages", {"tags": ["NN", ":", "JJ", "NN", "SYM", "NN", "IN", "NNS"]}], ["reindent", {"tags": ["NN"]}], ["refactor & fix the imports checker", {"tags": ["NN", "CC", "VB", "DT", "NNS", "NN"]}], ["cleanup", {"tags": ["NN"]}], ["order import graph", {"tags": ["NN", "NN", "NN"]}], ["changelog", {"tags": ["NN"]}], ["cleanup", {"tags": ["NN"]}], ["cleanup", {"tags": ["NN"]}], ["changelog", {"tags": ["NN"]}], ["cleanup", {"tags": ["NN"]}], ["pylint  0.18 release", {"tags": ["NN", "_SP", "CD", "NN"]}], ["cleanup\n\n--HG--\nbranch : astng2", {"tags": ["NN", "_SP", "NFP", "_SP", "NN", ":", "VB"]}], ["Changelog : semicolon check\n\n--HG--\nbranch : astng2", {"tags": ["NN", ":", "NN", "NN", "_SP", "NFP", "_SP", "NN", ":", "VB"]}], ["fix msg order\n\n--HG--\nbranch : astng2", {"tags": ["NN", "VB", "NN", "_SP", "NFP", "_SP", "NN", ":", "VB"]}], ["default code is 28\n\n--HG--\nbranch : astng2", {"tags": ["NN", "NN", "VBZ", "CD", "_SP", ":", "_SP", "NN", ":", "VB"]}], ["relation extraction tests\n\n--HG--\nbranch : astng2", {"tags": ["NN", "NN", "VBZ", "_SP", "NFP", "_SP", "NN", ":", "VB"]}], ["rename noerror_staticmethod_as_decorator test\n\n--HG--\nbranch : astng2", {"tags": ["NN", "NN", "NN", "_SP", "NFP", "_SP", "NN", ":", "VB"]}], ["fromlineno *must not be zero* either\n\n--HG--\nbranch : astng2", {"tags": ["NN", "NFP", "MD", "RB", "VB", "CD", "NFP", "CC", "_SP", "NFP", "_SP", "NN", ":", "VB"]}], ["stmt.fromlineno can be 0 for names defined on module level\n\n--HG--\nbranch : astng2", {"tags": ["NN", "MD", "VB", "CD", "IN", "NNS", "VBN", "IN", "JJ", "NN", "_SP", "NFP", "_SP", "NN", ":", "VB"]}], ["None is now a Const\n\n--HG--\nbranch : astng2", {"tags": ["NN", "VBZ", "RB", "DT", "NNP", "_SP", "NFP", "_SP", "NN", ":", "VB"]}], ["test fixes\n\n--HG--\nbranch : astng2", {"tags": ["NN", "VBZ", "_SP", "NFP", "_SP", "NN", ":", "VB"]}], ["None is now instance of Const\n\n--HG--\nbranch : astng2", {"tags": ["NN", "VBZ", "RB", "NN", "IN", "NNP", "_SP", "NFP", "_SP", "NN", ":", "VB"]}], ["variable can also be defined as vararg or kwarg\n\n--HG--\nbranch : astng2", {"tags": ["NN", "MD", "RB", "VB", "VBN", "IN", "NN", "CC", "NN", "_SP", "NFP", "_SP", "NN", ":", "VB"]}], ["cleanup", {"tags": ["NN"]}], ["typo", {"tags": ["NN"]}], ["test update", {"tags": ["NN", "NN"]}], ["cleanup / lint fixes", {"tags": ["NN", "SYM", "NN", "NNS"]}], ["cleanup", {"tags": ["NN"]}], ["rename tests to be executed by pytest", {"tags": ["NN", "NNS", "TO", "VB", "VBN", "IN", "JJS"]}], ["cleanup", {"tags": ["NN"]}], ["debian package 0.15.1", {"tags": ["NN", "NN", "."]}], ["debian package informations", {"tags": ["NN", "NN", "NNS"]}], ["cleanup", {"tags": ["NN"]}], ["fix builtin option and cleanup", {"tags": ["NN", "NNP", "NN", "CC", "NN"]}], ["cleanup class extractions recursions", {"tags": ["NN", "NN", "NNS", "NNS"]}], ["ancestor option : without recursion", {"tags": ["NN", "NN", ":", "IN", "NN"]}], ["fix tests for attributs and packages corrections", {"tags": ["NN", "NNS", "IN", "NNS", "CC", "VBZ", "NNS"]}], ["manpage; add command line shortcuts", {"tags": ["NN", ",", "VB", "NN", "NN", "VBZ"]}], ["filter doubled class names", {"tags": ["NN", "VBD", "NN", "NNS"]}], ["pylint-cleanups", {"tags": ["NN", "HYPH", "NNS"]}], ["consistency", {"tags": ["NN"]}], ["fix diagrams definition handlers", {"tags": ["NN", "VBZ", "NN", "NNS"]}], ["regexp fix", {"tags": ["NN", "NN"]}], ["typo", {"tags": ["NN"]}], ["cleanup", {"tags": ["NN"]}], ["rlint is not usable yet, may reintroduce it later but remove it for now", {"tags": ["NN", "VBZ", "RB", "JJ", "RB", ",", "MD", "VB", "PRP", "RB", "CC", "VB", "PRP", "IN", "RB"]}], ["pylint pylint", {"tags": ["NN", "NN"]}], ["print error message if tkinter is not available", {"tags": ["NN", "NN", "NN", "IN", "NN", "VBZ", "RB", "JJ"]}], ["defaultSuite is not working with testlib.unittest_main, go back to unittest.main", {"tags": ["NN", "VBZ", "RB", "VBG", "IN", "``", ",", "VB", "RB", "IN", "VB"]}], ["py2.3 test fixes", {"tags": ["NN", "NN", "VBZ"]}], ["grrr", {"tags": ["NN"]}], ["test fix, fix vs reporter name", {"tags": ["NN", "NN", ",", "VB", "IN", "NN", "NN"]}], ["transfert", {"tags": ["NN"]}], ["lint fixes", {"tags": ["NN", "NNS"]}], ["W0107: unnecessary pass", {"tags": ["NN", ":", "JJ", "VB"]}], ["rpython tests ok", {"tags": ["NN", "NNS", "RB"]}], ["cleanup, change checker enabling impl", {"tags": ["NN", ",", "VB", "NN", "VBG", "NN"]}], ["test fixes", {"tags": ["NN", "NNS"]}], ["changelog update", {"tags": ["NN", "NN"]}], ["message fixes", {"tags": ["NN", "NNS"]}], ["debian packaging update", {"tags": ["NN", "NN", "NN"]}], ["load defaults options at registration time", {"tags": ["NN", "NNS", "NNS", "IN", "NN", "NN"]}], ["load default values", {"tags": ["NN", "NN", "NNS"]}]]